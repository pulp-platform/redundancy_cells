// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// SECDED Encoder generated by
// util/design/secded_gen.py -s 1592631616 from util/design/data/secded_cfg.hjson

package prim_secded_pkg;

  typedef struct packed {
    logic [0:0] data;
    logic [2:0] syndrome;
    logic [1:0]  err;
  } secded_4_1_t;

  typedef struct packed {
    logic [3:0] data;
    logic [3:0] syndrome;
    logic [1:0]  err;
  } secded_8_4_t;

  typedef struct packed {
    logic [7:0] data;
    logic [4:0] syndrome;
    logic [1:0]  err;
  } secded_13_8_t;

  typedef struct packed {
    logic [10:0] data;
    logic [4:0] syndrome;
    logic [1:0]  err;
  } secded_16_11_t;

  typedef struct packed {
    logic [15:0] data;
    logic [5:0] syndrome;
    logic [1:0]  err;
  } secded_22_16_t;

  typedef struct packed {
    logic [21:0] data;
    logic [5:0] syndrome;
    logic [1:0]  err;
  } secded_28_22_t;

  typedef struct packed {
    logic [25:0] data;
    logic [5:0] syndrome;
    logic [1:0]  err;
  } secded_32_26_t;

  typedef struct packed {
    logic [31:0] data;
    logic [6:0] syndrome;
    logic [1:0]  err;
  } secded_39_32_t;

  typedef struct packed {
    logic [56:0] data;
    logic [6:0] syndrome;
    logic [1:0]  err;
  } secded_64_57_t;

  typedef struct packed {
    logic [63:0] data;
    logic [7:0] syndrome;
    logic [1:0]  err;
  } secded_72_64_t;

  typedef struct packed {
    logic [119:0] data;
    logic [7:0] syndrome;
    logic [1:0]  err;
  } secded_128_120_t;

  typedef struct packed {
    logic [246:0] data;
    logic [8:0] syndrome;
    logic [1:0]  err;
  } secded_256_247_t;

  typedef struct packed {
    logic [501:0] data;
    logic [9:0] syndrome;
    logic [1:0]  err;
  } secded_512_502_t;

  typedef struct packed {
    logic [15:0] data;
    logic [5:0] syndrome;
    logic [1:0]  err;
  } secded_hamming_22_16_t;

  typedef struct packed {
    logic [31:0] data;
    logic [6:0] syndrome;
    logic [1:0]  err;
  } secded_hamming_39_32_t;

  typedef struct packed {
    logic [63:0] data;
    logic [7:0] syndrome;
    logic [1:0]  err;
  } secded_hamming_72_64_t;

  function automatic logic [3:0] prim_secded_4_1_enc (logic [0:0] in);
    logic [3:0] out;
    out[0:0] = in;
    out[1] = ^(in & 1'h1);
    out[2] = ^(in & 1'h1);
    out[3] = ^(in & 1'h1);
    return out;
  endfunction

  function automatic secded_4_1_t prim_secded_4_1_dec (logic [3:0] in);
    logic [0:0] d_o;
    logic [2:0] syndrome_o;
    logic [1:0]  err_o;

    secded_4_1_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 4'h3);
    syndrome_o[1] = ^(in & 4'h5);
    syndrome_o[2] = ^(in & 4'h9);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 3'h7) ^ in[0];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [7:0] prim_secded_8_4_enc (logic [3:0] in);
    logic [7:0] out;
    out[3:0] = in;
    out[4] = ^(in & 4'h7);
    out[5] = ^(in & 4'hB);
    out[6] = ^(in & 4'hD);
    out[7] = ^(in & 4'hE);
    return out;
  endfunction

  function automatic secded_8_4_t prim_secded_8_4_dec (logic [7:0] in);
    logic [3:0] d_o;
    logic [3:0] syndrome_o;
    logic [1:0]  err_o;

    secded_8_4_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 8'h17);
    syndrome_o[1] = ^(in & 8'h2B);
    syndrome_o[2] = ^(in & 8'h4D);
    syndrome_o[3] = ^(in & 8'h8E);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 4'h7) ^ in[0];
    d_o[1] = (syndrome_o == 4'hb) ^ in[1];
    d_o[2] = (syndrome_o == 4'hd) ^ in[2];
    d_o[3] = (syndrome_o == 4'he) ^ in[3];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [12:0] prim_secded_13_8_enc (logic [7:0] in);
    logic [12:0] out;
    out[7:0] = in;
    out[8] = ^(in & 8'h6B);
    out[9] = ^(in & 8'hF8);
    out[10] = ^(in & 8'hD5);
    out[11] = ^(in & 8'hA7);
    out[12] = ^(in & 8'h1E);
    return out;
  endfunction

  function automatic secded_13_8_t prim_secded_13_8_dec (logic [12:0] in);
    logic [7:0] d_o;
    logic [4:0] syndrome_o;
    logic [1:0]  err_o;

    secded_13_8_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 13'h016B);
    syndrome_o[1] = ^(in & 13'h02F8);
    syndrome_o[2] = ^(in & 13'h04D5);
    syndrome_o[3] = ^(in & 13'h08A7);
    syndrome_o[4] = ^(in & 13'h101E);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 5'hd) ^ in[0];
    d_o[1] = (syndrome_o == 5'h19) ^ in[1];
    d_o[2] = (syndrome_o == 5'h1c) ^ in[2];
    d_o[3] = (syndrome_o == 5'h13) ^ in[3];
    d_o[4] = (syndrome_o == 5'h16) ^ in[4];
    d_o[5] = (syndrome_o == 5'hb) ^ in[5];
    d_o[6] = (syndrome_o == 5'h7) ^ in[6];
    d_o[7] = (syndrome_o == 5'he) ^ in[7];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [15:0] prim_secded_16_11_enc (logic [10:0] in);
    logic [15:0] out;
    out[10:0] = in;
    out[11] = ^(in & 11'h43F);
    out[12] = ^(in & 11'h5C7);
    out[13] = ^(in & 11'h6D9);
    out[14] = ^(in & 11'h76A);
    out[15] = ^(in & 11'h7B4);
    return out;
  endfunction

  function automatic secded_16_11_t prim_secded_16_11_dec (logic [15:0] in);
    logic [10:0] d_o;
    logic [4:0] syndrome_o;
    logic [1:0]  err_o;

    secded_16_11_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 16'h0C3F);
    syndrome_o[1] = ^(in & 16'h15C7);
    syndrome_o[2] = ^(in & 16'h26D9);
    syndrome_o[3] = ^(in & 16'h476A);
    syndrome_o[4] = ^(in & 16'h87B4);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 5'h7) ^ in[0];
    d_o[1] = (syndrome_o == 5'hb) ^ in[1];
    d_o[2] = (syndrome_o == 5'h13) ^ in[2];
    d_o[3] = (syndrome_o == 5'hd) ^ in[3];
    d_o[4] = (syndrome_o == 5'h15) ^ in[4];
    d_o[5] = (syndrome_o == 5'h19) ^ in[5];
    d_o[6] = (syndrome_o == 5'he) ^ in[6];
    d_o[7] = (syndrome_o == 5'h16) ^ in[7];
    d_o[8] = (syndrome_o == 5'h1a) ^ in[8];
    d_o[9] = (syndrome_o == 5'h1c) ^ in[9];
    d_o[10] = (syndrome_o == 5'h1f) ^ in[10];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [21:0] prim_secded_22_16_enc (logic [15:0] in);
    logic [21:0] out;
    out[15:0] = in;
    out[16] = ^(in & 16'h7B48);
    out[17] = ^(in & 16'h91AB);
    out[18] = ^(in & 16'h0E3D);
    out[19] = ^(in & 16'h7692);
    out[20] = ^(in & 16'hA547);
    out[21] = ^(in & 16'hC8F4);
    return out;
  endfunction

  function automatic secded_22_16_t prim_secded_22_16_dec (logic [21:0] in);
    logic [15:0] d_o;
    logic [5:0] syndrome_o;
    logic [1:0]  err_o;

    secded_22_16_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 22'h017B48);
    syndrome_o[1] = ^(in & 22'h0291AB);
    syndrome_o[2] = ^(in & 22'h040E3D);
    syndrome_o[3] = ^(in & 22'h087692);
    syndrome_o[4] = ^(in & 22'h10A547);
    syndrome_o[5] = ^(in & 22'h20C8F4);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 6'h16) ^ in[0];
    d_o[1] = (syndrome_o == 6'h1a) ^ in[1];
    d_o[2] = (syndrome_o == 6'h34) ^ in[2];
    d_o[3] = (syndrome_o == 6'h7) ^ in[3];
    d_o[4] = (syndrome_o == 6'h2c) ^ in[4];
    d_o[5] = (syndrome_o == 6'h26) ^ in[5];
    d_o[6] = (syndrome_o == 6'h31) ^ in[6];
    d_o[7] = (syndrome_o == 6'h2a) ^ in[7];
    d_o[8] = (syndrome_o == 6'h13) ^ in[8];
    d_o[9] = (syndrome_o == 6'hd) ^ in[9];
    d_o[10] = (syndrome_o == 6'h1c) ^ in[10];
    d_o[11] = (syndrome_o == 6'h25) ^ in[11];
    d_o[12] = (syndrome_o == 6'hb) ^ in[12];
    d_o[13] = (syndrome_o == 6'h19) ^ in[13];
    d_o[14] = (syndrome_o == 6'h29) ^ in[14];
    d_o[15] = (syndrome_o == 6'h32) ^ in[15];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [27:0] prim_secded_28_22_enc (logic [21:0] in);
    logic [27:0] out;
    out[21:0] = in;
    out[22] = ^(in & 22'h3003FF);
    out[23] = ^(in & 22'h20FC0F);
    out[24] = ^(in & 22'h171C71);
    out[25] = ^(in & 22'h3B6592);
    out[26] = ^(in & 22'h3DAAA4);
    out[27] = ^(in & 22'h3ED348);
    return out;
  endfunction

  function automatic secded_28_22_t prim_secded_28_22_dec (logic [27:0] in);
    logic [21:0] d_o;
    logic [5:0] syndrome_o;
    logic [1:0]  err_o;

    secded_28_22_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 28'h07003FF);
    syndrome_o[1] = ^(in & 28'h0A0FC0F);
    syndrome_o[2] = ^(in & 28'h1171C71);
    syndrome_o[3] = ^(in & 28'h23B6592);
    syndrome_o[4] = ^(in & 28'h43DAAA4);
    syndrome_o[5] = ^(in & 28'h83ED348);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 6'h7) ^ in[0];
    d_o[1] = (syndrome_o == 6'hb) ^ in[1];
    d_o[2] = (syndrome_o == 6'h13) ^ in[2];
    d_o[3] = (syndrome_o == 6'h23) ^ in[3];
    d_o[4] = (syndrome_o == 6'hd) ^ in[4];
    d_o[5] = (syndrome_o == 6'h15) ^ in[5];
    d_o[6] = (syndrome_o == 6'h25) ^ in[6];
    d_o[7] = (syndrome_o == 6'h19) ^ in[7];
    d_o[8] = (syndrome_o == 6'h29) ^ in[8];
    d_o[9] = (syndrome_o == 6'h31) ^ in[9];
    d_o[10] = (syndrome_o == 6'he) ^ in[10];
    d_o[11] = (syndrome_o == 6'h16) ^ in[11];
    d_o[12] = (syndrome_o == 6'h26) ^ in[12];
    d_o[13] = (syndrome_o == 6'h1a) ^ in[13];
    d_o[14] = (syndrome_o == 6'h2a) ^ in[14];
    d_o[15] = (syndrome_o == 6'h32) ^ in[15];
    d_o[16] = (syndrome_o == 6'h1c) ^ in[16];
    d_o[17] = (syndrome_o == 6'h2c) ^ in[17];
    d_o[18] = (syndrome_o == 6'h34) ^ in[18];
    d_o[19] = (syndrome_o == 6'h38) ^ in[19];
    d_o[20] = (syndrome_o == 6'h3d) ^ in[20];
    d_o[21] = (syndrome_o == 6'h3b) ^ in[21];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [31:0] prim_secded_32_26_enc (logic [25:0] in);
    logic [31:0] out;
    out[25:0] = in;
    out[26] = ^(in & 26'h1F003FF);
    out[27] = ^(in & 26'h2F0FC0F);
    out[28] = ^(in & 26'h3771C71);
    out[29] = ^(in & 26'h3BB6592);
    out[30] = ^(in & 26'h3DDAAA4);
    out[31] = ^(in & 26'h3EED348);
    return out;
  endfunction

  function automatic secded_32_26_t prim_secded_32_26_dec (logic [31:0] in);
    logic [25:0] d_o;
    logic [5:0] syndrome_o;
    logic [1:0]  err_o;

    secded_32_26_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 32'h05F003FF);
    syndrome_o[1] = ^(in & 32'h0AF0FC0F);
    syndrome_o[2] = ^(in & 32'h13771C71);
    syndrome_o[3] = ^(in & 32'h23BB6592);
    syndrome_o[4] = ^(in & 32'h43DDAAA4);
    syndrome_o[5] = ^(in & 32'h83EED348);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 6'h7) ^ in[0];
    d_o[1] = (syndrome_o == 6'hb) ^ in[1];
    d_o[2] = (syndrome_o == 6'h13) ^ in[2];
    d_o[3] = (syndrome_o == 6'h23) ^ in[3];
    d_o[4] = (syndrome_o == 6'hd) ^ in[4];
    d_o[5] = (syndrome_o == 6'h15) ^ in[5];
    d_o[6] = (syndrome_o == 6'h25) ^ in[6];
    d_o[7] = (syndrome_o == 6'h19) ^ in[7];
    d_o[8] = (syndrome_o == 6'h29) ^ in[8];
    d_o[9] = (syndrome_o == 6'h31) ^ in[9];
    d_o[10] = (syndrome_o == 6'he) ^ in[10];
    d_o[11] = (syndrome_o == 6'h16) ^ in[11];
    d_o[12] = (syndrome_o == 6'h26) ^ in[12];
    d_o[13] = (syndrome_o == 6'h1a) ^ in[13];
    d_o[14] = (syndrome_o == 6'h2a) ^ in[14];
    d_o[15] = (syndrome_o == 6'h32) ^ in[15];
    d_o[16] = (syndrome_o == 6'h1c) ^ in[16];
    d_o[17] = (syndrome_o == 6'h2c) ^ in[17];
    d_o[18] = (syndrome_o == 6'h34) ^ in[18];
    d_o[19] = (syndrome_o == 6'h38) ^ in[19];
    d_o[20] = (syndrome_o == 6'h1f) ^ in[20];
    d_o[21] = (syndrome_o == 6'h2f) ^ in[21];
    d_o[22] = (syndrome_o == 6'h37) ^ in[22];
    d_o[23] = (syndrome_o == 6'h3b) ^ in[23];
    d_o[24] = (syndrome_o == 6'h3d) ^ in[24];
    d_o[25] = (syndrome_o == 6'h3e) ^ in[25];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [38:0] prim_secded_39_32_enc (logic [31:0] in);
    logic [38:0] out;
    out[31:0] = in;
    out[32] = ^(in & 32'h3800CDBC);
    out[33] = ^(in & 32'hC439C325);
    out[34] = ^(in & 32'h52D82C63);
    out[35] = ^(in & 32'hA4363856);
    out[36] = ^(in & 32'h9B833109);
    out[37] = ^(in & 32'h2DCF42C0);
    out[38] = ^(in & 32'h4364969A);
    return out;
  endfunction

  function automatic secded_39_32_t prim_secded_39_32_dec (logic [38:0] in);
    logic [31:0] d_o;
    logic [6:0] syndrome_o;
    logic [1:0]  err_o;

    secded_39_32_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 39'h013800CDBC);
    syndrome_o[1] = ^(in & 39'h02C439C325);
    syndrome_o[2] = ^(in & 39'h0452D82C63);
    syndrome_o[3] = ^(in & 39'h08A4363856);
    syndrome_o[4] = ^(in & 39'h109B833109);
    syndrome_o[5] = ^(in & 39'h202DCF42C0);
    syndrome_o[6] = ^(in & 39'h404364969A);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 7'h16) ^ in[0];
    d_o[1] = (syndrome_o == 7'h4c) ^ in[1];
    d_o[2] = (syndrome_o == 7'hb) ^ in[2];
    d_o[3] = (syndrome_o == 7'h51) ^ in[3];
    d_o[4] = (syndrome_o == 7'h49) ^ in[4];
    d_o[5] = (syndrome_o == 7'h7) ^ in[5];
    d_o[6] = (syndrome_o == 7'h2c) ^ in[6];
    d_o[7] = (syndrome_o == 7'h61) ^ in[7];
    d_o[8] = (syndrome_o == 7'h13) ^ in[8];
    d_o[9] = (syndrome_o == 7'h62) ^ in[9];
    d_o[10] = (syndrome_o == 7'h45) ^ in[10];
    d_o[11] = (syndrome_o == 7'hd) ^ in[11];
    d_o[12] = (syndrome_o == 7'h58) ^ in[12];
    d_o[13] = (syndrome_o == 7'h1c) ^ in[13];
    d_o[14] = (syndrome_o == 7'h23) ^ in[14];
    d_o[15] = (syndrome_o == 7'h43) ^ in[15];
    d_o[16] = (syndrome_o == 7'h32) ^ in[16];
    d_o[17] = (syndrome_o == 7'h38) ^ in[17];
    d_o[18] = (syndrome_o == 7'h68) ^ in[18];
    d_o[19] = (syndrome_o == 7'h26) ^ in[19];
    d_o[20] = (syndrome_o == 7'he) ^ in[20];
    d_o[21] = (syndrome_o == 7'h4a) ^ in[21];
    d_o[22] = (syndrome_o == 7'h64) ^ in[22];
    d_o[23] = (syndrome_o == 7'h34) ^ in[23];
    d_o[24] = (syndrome_o == 7'h70) ^ in[24];
    d_o[25] = (syndrome_o == 7'h54) ^ in[25];
    d_o[26] = (syndrome_o == 7'h2a) ^ in[26];
    d_o[27] = (syndrome_o == 7'h31) ^ in[27];
    d_o[28] = (syndrome_o == 7'h15) ^ in[28];
    d_o[29] = (syndrome_o == 7'h29) ^ in[29];
    d_o[30] = (syndrome_o == 7'h46) ^ in[30];
    d_o[31] = (syndrome_o == 7'h1a) ^ in[31];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [63:0] prim_secded_64_57_enc (logic [56:0] in);
    logic [63:0] out;
    out[56:0] = in;
    out[57] = ^(in & 57'h103FFF800007FFF);
    out[58] = ^(in & 57'h17C1FF801FF801F);
    out[59] = ^(in & 57'h1BDE1F87E0781E1);
    out[60] = ^(in & 57'h1DEEE3B8E388E22);
    out[61] = ^(in & 57'h1EF76CDB2C93244);
    out[62] = ^(in & 57'h1F7BB56D5525488);
    out[63] = ^(in & 57'h1FBDDA769A46910);
    return out;
  endfunction

  function automatic secded_64_57_t prim_secded_64_57_dec (logic [63:0] in);
    logic [56:0] d_o;
    logic [6:0] syndrome_o;
    logic [1:0]  err_o;

    secded_64_57_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 64'h0303FFF800007FFF);
    syndrome_o[1] = ^(in & 64'h057C1FF801FF801F);
    syndrome_o[2] = ^(in & 64'h09BDE1F87E0781E1);
    syndrome_o[3] = ^(in & 64'h11DEEE3B8E388E22);
    syndrome_o[4] = ^(in & 64'h21EF76CDB2C93244);
    syndrome_o[5] = ^(in & 64'h41F7BB56D5525488);
    syndrome_o[6] = ^(in & 64'h81FBDDA769A46910);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 7'h7) ^ in[0];
    d_o[1] = (syndrome_o == 7'hb) ^ in[1];
    d_o[2] = (syndrome_o == 7'h13) ^ in[2];
    d_o[3] = (syndrome_o == 7'h23) ^ in[3];
    d_o[4] = (syndrome_o == 7'h43) ^ in[4];
    d_o[5] = (syndrome_o == 7'hd) ^ in[5];
    d_o[6] = (syndrome_o == 7'h15) ^ in[6];
    d_o[7] = (syndrome_o == 7'h25) ^ in[7];
    d_o[8] = (syndrome_o == 7'h45) ^ in[8];
    d_o[9] = (syndrome_o == 7'h19) ^ in[9];
    d_o[10] = (syndrome_o == 7'h29) ^ in[10];
    d_o[11] = (syndrome_o == 7'h49) ^ in[11];
    d_o[12] = (syndrome_o == 7'h31) ^ in[12];
    d_o[13] = (syndrome_o == 7'h51) ^ in[13];
    d_o[14] = (syndrome_o == 7'h61) ^ in[14];
    d_o[15] = (syndrome_o == 7'he) ^ in[15];
    d_o[16] = (syndrome_o == 7'h16) ^ in[16];
    d_o[17] = (syndrome_o == 7'h26) ^ in[17];
    d_o[18] = (syndrome_o == 7'h46) ^ in[18];
    d_o[19] = (syndrome_o == 7'h1a) ^ in[19];
    d_o[20] = (syndrome_o == 7'h2a) ^ in[20];
    d_o[21] = (syndrome_o == 7'h4a) ^ in[21];
    d_o[22] = (syndrome_o == 7'h32) ^ in[22];
    d_o[23] = (syndrome_o == 7'h52) ^ in[23];
    d_o[24] = (syndrome_o == 7'h62) ^ in[24];
    d_o[25] = (syndrome_o == 7'h1c) ^ in[25];
    d_o[26] = (syndrome_o == 7'h2c) ^ in[26];
    d_o[27] = (syndrome_o == 7'h4c) ^ in[27];
    d_o[28] = (syndrome_o == 7'h34) ^ in[28];
    d_o[29] = (syndrome_o == 7'h54) ^ in[29];
    d_o[30] = (syndrome_o == 7'h64) ^ in[30];
    d_o[31] = (syndrome_o == 7'h38) ^ in[31];
    d_o[32] = (syndrome_o == 7'h58) ^ in[32];
    d_o[33] = (syndrome_o == 7'h68) ^ in[33];
    d_o[34] = (syndrome_o == 7'h70) ^ in[34];
    d_o[35] = (syndrome_o == 7'h1f) ^ in[35];
    d_o[36] = (syndrome_o == 7'h2f) ^ in[36];
    d_o[37] = (syndrome_o == 7'h4f) ^ in[37];
    d_o[38] = (syndrome_o == 7'h37) ^ in[38];
    d_o[39] = (syndrome_o == 7'h57) ^ in[39];
    d_o[40] = (syndrome_o == 7'h67) ^ in[40];
    d_o[41] = (syndrome_o == 7'h3b) ^ in[41];
    d_o[42] = (syndrome_o == 7'h5b) ^ in[42];
    d_o[43] = (syndrome_o == 7'h6b) ^ in[43];
    d_o[44] = (syndrome_o == 7'h73) ^ in[44];
    d_o[45] = (syndrome_o == 7'h3d) ^ in[45];
    d_o[46] = (syndrome_o == 7'h5d) ^ in[46];
    d_o[47] = (syndrome_o == 7'h6d) ^ in[47];
    d_o[48] = (syndrome_o == 7'h75) ^ in[48];
    d_o[49] = (syndrome_o == 7'h79) ^ in[49];
    d_o[50] = (syndrome_o == 7'h3e) ^ in[50];
    d_o[51] = (syndrome_o == 7'h5e) ^ in[51];
    d_o[52] = (syndrome_o == 7'h6e) ^ in[52];
    d_o[53] = (syndrome_o == 7'h76) ^ in[53];
    d_o[54] = (syndrome_o == 7'h7a) ^ in[54];
    d_o[55] = (syndrome_o == 7'h7c) ^ in[55];
    d_o[56] = (syndrome_o == 7'h7f) ^ in[56];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [71:0] prim_secded_72_64_enc (logic [63:0] in);
    logic [71:0] out;
    out[63:0] = in;
    out[64] = ^(in & 64'hF8000000001FFFFF);
    out[65] = ^(in & 64'h9D00000FFFE0003F);
    out[66] = ^(in & 64'h8F003FF003E007C1);
    out[67] = ^(in & 64'hF10FC0F03C207842);
    out[68] = ^(in & 64'h6E71C711C4438884);
    out[69] = ^(in & 64'h3EB65926488C9108);
    out[70] = ^(in & 64'hD3DAAA4A91152210);
    out[71] = ^(in & 64'h67ED348D221A4420);
    return out;
  endfunction

  function automatic secded_72_64_t prim_secded_72_64_dec (logic [71:0] in);
    logic [63:0] d_o;
    logic [7:0] syndrome_o;
    logic [1:0]  err_o;

    secded_72_64_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 72'h01F8000000001FFFFF);
    syndrome_o[1] = ^(in & 72'h029D00000FFFE0003F);
    syndrome_o[2] = ^(in & 72'h048F003FF003E007C1);
    syndrome_o[3] = ^(in & 72'h08F10FC0F03C207842);
    syndrome_o[4] = ^(in & 72'h106E71C711C4438884);
    syndrome_o[5] = ^(in & 72'h203EB65926488C9108);
    syndrome_o[6] = ^(in & 72'h40D3DAAA4A91152210);
    syndrome_o[7] = ^(in & 72'h8067ED348D221A4420);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 8'h7) ^ in[0];
    d_o[1] = (syndrome_o == 8'hb) ^ in[1];
    d_o[2] = (syndrome_o == 8'h13) ^ in[2];
    d_o[3] = (syndrome_o == 8'h23) ^ in[3];
    d_o[4] = (syndrome_o == 8'h43) ^ in[4];
    d_o[5] = (syndrome_o == 8'h83) ^ in[5];
    d_o[6] = (syndrome_o == 8'hd) ^ in[6];
    d_o[7] = (syndrome_o == 8'h15) ^ in[7];
    d_o[8] = (syndrome_o == 8'h25) ^ in[8];
    d_o[9] = (syndrome_o == 8'h45) ^ in[9];
    d_o[10] = (syndrome_o == 8'h85) ^ in[10];
    d_o[11] = (syndrome_o == 8'h19) ^ in[11];
    d_o[12] = (syndrome_o == 8'h29) ^ in[12];
    d_o[13] = (syndrome_o == 8'h49) ^ in[13];
    d_o[14] = (syndrome_o == 8'h89) ^ in[14];
    d_o[15] = (syndrome_o == 8'h31) ^ in[15];
    d_o[16] = (syndrome_o == 8'h51) ^ in[16];
    d_o[17] = (syndrome_o == 8'h91) ^ in[17];
    d_o[18] = (syndrome_o == 8'h61) ^ in[18];
    d_o[19] = (syndrome_o == 8'ha1) ^ in[19];
    d_o[20] = (syndrome_o == 8'hc1) ^ in[20];
    d_o[21] = (syndrome_o == 8'he) ^ in[21];
    d_o[22] = (syndrome_o == 8'h16) ^ in[22];
    d_o[23] = (syndrome_o == 8'h26) ^ in[23];
    d_o[24] = (syndrome_o == 8'h46) ^ in[24];
    d_o[25] = (syndrome_o == 8'h86) ^ in[25];
    d_o[26] = (syndrome_o == 8'h1a) ^ in[26];
    d_o[27] = (syndrome_o == 8'h2a) ^ in[27];
    d_o[28] = (syndrome_o == 8'h4a) ^ in[28];
    d_o[29] = (syndrome_o == 8'h8a) ^ in[29];
    d_o[30] = (syndrome_o == 8'h32) ^ in[30];
    d_o[31] = (syndrome_o == 8'h52) ^ in[31];
    d_o[32] = (syndrome_o == 8'h92) ^ in[32];
    d_o[33] = (syndrome_o == 8'h62) ^ in[33];
    d_o[34] = (syndrome_o == 8'ha2) ^ in[34];
    d_o[35] = (syndrome_o == 8'hc2) ^ in[35];
    d_o[36] = (syndrome_o == 8'h1c) ^ in[36];
    d_o[37] = (syndrome_o == 8'h2c) ^ in[37];
    d_o[38] = (syndrome_o == 8'h4c) ^ in[38];
    d_o[39] = (syndrome_o == 8'h8c) ^ in[39];
    d_o[40] = (syndrome_o == 8'h34) ^ in[40];
    d_o[41] = (syndrome_o == 8'h54) ^ in[41];
    d_o[42] = (syndrome_o == 8'h94) ^ in[42];
    d_o[43] = (syndrome_o == 8'h64) ^ in[43];
    d_o[44] = (syndrome_o == 8'ha4) ^ in[44];
    d_o[45] = (syndrome_o == 8'hc4) ^ in[45];
    d_o[46] = (syndrome_o == 8'h38) ^ in[46];
    d_o[47] = (syndrome_o == 8'h58) ^ in[47];
    d_o[48] = (syndrome_o == 8'h98) ^ in[48];
    d_o[49] = (syndrome_o == 8'h68) ^ in[49];
    d_o[50] = (syndrome_o == 8'ha8) ^ in[50];
    d_o[51] = (syndrome_o == 8'hc8) ^ in[51];
    d_o[52] = (syndrome_o == 8'h70) ^ in[52];
    d_o[53] = (syndrome_o == 8'hb0) ^ in[53];
    d_o[54] = (syndrome_o == 8'hd0) ^ in[54];
    d_o[55] = (syndrome_o == 8'he0) ^ in[55];
    d_o[56] = (syndrome_o == 8'hce) ^ in[56];
    d_o[57] = (syndrome_o == 8'hf4) ^ in[57];
    d_o[58] = (syndrome_o == 8'hb6) ^ in[58];
    d_o[59] = (syndrome_o == 8'h37) ^ in[59];
    d_o[60] = (syndrome_o == 8'h6b) ^ in[60];
    d_o[61] = (syndrome_o == 8'hb9) ^ in[61];
    d_o[62] = (syndrome_o == 8'hd9) ^ in[62];
    d_o[63] = (syndrome_o == 8'h4f) ^ in[63];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [127:0] prim_secded_128_120_enc (logic [119:0] in);
    logic [127:0] out;
    out[119:0] = in;
    out[120] = ^(in & 120'h7F000007FFFFFFFF000000001FFFFF);
    out[121] = ^(in & 120'hBF03FFF8000FFFFF00000FFFE0003F);
    out[122] = ^(in & 120'hDF7C1FF83FF003FF003FF003E007C1);
    out[123] = ^(in & 120'hEFBDE1FBC3F0FC0F0FC0F03C207842);
    out[124] = ^(in & 120'hF7DEEE3DDC771C7171C711C4438884);
    out[125] = ^(in & 120'hFBEF76CEED9B6592B65926488C9108);
    out[126] = ^(in & 120'hFDF7BB5776ADAAA4DAAA4A91152210);
    out[127] = ^(in & 120'hFEFBDDA7BB4ED348ED348D221A4420);
    return out;
  endfunction

  function automatic secded_128_120_t prim_secded_128_120_dec (logic [127:0] in);
    logic [119:0] d_o;
    logic [7:0] syndrome_o;
    logic [1:0]  err_o;

    secded_128_120_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 128'h017F000007FFFFFFFF000000001FFFFF);
    syndrome_o[1] = ^(in & 128'h02BF03FFF8000FFFFF00000FFFE0003F);
    syndrome_o[2] = ^(in & 128'h04DF7C1FF83FF003FF003FF003E007C1);
    syndrome_o[3] = ^(in & 128'h08EFBDE1FBC3F0FC0F0FC0F03C207842);
    syndrome_o[4] = ^(in & 128'h10F7DEEE3DDC771C7171C711C4438884);
    syndrome_o[5] = ^(in & 128'h20FBEF76CEED9B6592B65926488C9108);
    syndrome_o[6] = ^(in & 128'h40FDF7BB5776ADAAA4DAAA4A91152210);
    syndrome_o[7] = ^(in & 128'h80FEFBDDA7BB4ED348ED348D221A4420);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 8'h7) ^ in[0];
    d_o[1] = (syndrome_o == 8'hb) ^ in[1];
    d_o[2] = (syndrome_o == 8'h13) ^ in[2];
    d_o[3] = (syndrome_o == 8'h23) ^ in[3];
    d_o[4] = (syndrome_o == 8'h43) ^ in[4];
    d_o[5] = (syndrome_o == 8'h83) ^ in[5];
    d_o[6] = (syndrome_o == 8'hd) ^ in[6];
    d_o[7] = (syndrome_o == 8'h15) ^ in[7];
    d_o[8] = (syndrome_o == 8'h25) ^ in[8];
    d_o[9] = (syndrome_o == 8'h45) ^ in[9];
    d_o[10] = (syndrome_o == 8'h85) ^ in[10];
    d_o[11] = (syndrome_o == 8'h19) ^ in[11];
    d_o[12] = (syndrome_o == 8'h29) ^ in[12];
    d_o[13] = (syndrome_o == 8'h49) ^ in[13];
    d_o[14] = (syndrome_o == 8'h89) ^ in[14];
    d_o[15] = (syndrome_o == 8'h31) ^ in[15];
    d_o[16] = (syndrome_o == 8'h51) ^ in[16];
    d_o[17] = (syndrome_o == 8'h91) ^ in[17];
    d_o[18] = (syndrome_o == 8'h61) ^ in[18];
    d_o[19] = (syndrome_o == 8'ha1) ^ in[19];
    d_o[20] = (syndrome_o == 8'hc1) ^ in[20];
    d_o[21] = (syndrome_o == 8'he) ^ in[21];
    d_o[22] = (syndrome_o == 8'h16) ^ in[22];
    d_o[23] = (syndrome_o == 8'h26) ^ in[23];
    d_o[24] = (syndrome_o == 8'h46) ^ in[24];
    d_o[25] = (syndrome_o == 8'h86) ^ in[25];
    d_o[26] = (syndrome_o == 8'h1a) ^ in[26];
    d_o[27] = (syndrome_o == 8'h2a) ^ in[27];
    d_o[28] = (syndrome_o == 8'h4a) ^ in[28];
    d_o[29] = (syndrome_o == 8'h8a) ^ in[29];
    d_o[30] = (syndrome_o == 8'h32) ^ in[30];
    d_o[31] = (syndrome_o == 8'h52) ^ in[31];
    d_o[32] = (syndrome_o == 8'h92) ^ in[32];
    d_o[33] = (syndrome_o == 8'h62) ^ in[33];
    d_o[34] = (syndrome_o == 8'ha2) ^ in[34];
    d_o[35] = (syndrome_o == 8'hc2) ^ in[35];
    d_o[36] = (syndrome_o == 8'h1c) ^ in[36];
    d_o[37] = (syndrome_o == 8'h2c) ^ in[37];
    d_o[38] = (syndrome_o == 8'h4c) ^ in[38];
    d_o[39] = (syndrome_o == 8'h8c) ^ in[39];
    d_o[40] = (syndrome_o == 8'h34) ^ in[40];
    d_o[41] = (syndrome_o == 8'h54) ^ in[41];
    d_o[42] = (syndrome_o == 8'h94) ^ in[42];
    d_o[43] = (syndrome_o == 8'h64) ^ in[43];
    d_o[44] = (syndrome_o == 8'ha4) ^ in[44];
    d_o[45] = (syndrome_o == 8'hc4) ^ in[45];
    d_o[46] = (syndrome_o == 8'h38) ^ in[46];
    d_o[47] = (syndrome_o == 8'h58) ^ in[47];
    d_o[48] = (syndrome_o == 8'h98) ^ in[48];
    d_o[49] = (syndrome_o == 8'h68) ^ in[49];
    d_o[50] = (syndrome_o == 8'ha8) ^ in[50];
    d_o[51] = (syndrome_o == 8'hc8) ^ in[51];
    d_o[52] = (syndrome_o == 8'h70) ^ in[52];
    d_o[53] = (syndrome_o == 8'hb0) ^ in[53];
    d_o[54] = (syndrome_o == 8'hd0) ^ in[54];
    d_o[55] = (syndrome_o == 8'he0) ^ in[55];
    d_o[56] = (syndrome_o == 8'h1f) ^ in[56];
    d_o[57] = (syndrome_o == 8'h2f) ^ in[57];
    d_o[58] = (syndrome_o == 8'h4f) ^ in[58];
    d_o[59] = (syndrome_o == 8'h8f) ^ in[59];
    d_o[60] = (syndrome_o == 8'h37) ^ in[60];
    d_o[61] = (syndrome_o == 8'h57) ^ in[61];
    d_o[62] = (syndrome_o == 8'h97) ^ in[62];
    d_o[63] = (syndrome_o == 8'h67) ^ in[63];
    d_o[64] = (syndrome_o == 8'ha7) ^ in[64];
    d_o[65] = (syndrome_o == 8'hc7) ^ in[65];
    d_o[66] = (syndrome_o == 8'h3b) ^ in[66];
    d_o[67] = (syndrome_o == 8'h5b) ^ in[67];
    d_o[68] = (syndrome_o == 8'h9b) ^ in[68];
    d_o[69] = (syndrome_o == 8'h6b) ^ in[69];
    d_o[70] = (syndrome_o == 8'hab) ^ in[70];
    d_o[71] = (syndrome_o == 8'hcb) ^ in[71];
    d_o[72] = (syndrome_o == 8'h73) ^ in[72];
    d_o[73] = (syndrome_o == 8'hb3) ^ in[73];
    d_o[74] = (syndrome_o == 8'hd3) ^ in[74];
    d_o[75] = (syndrome_o == 8'he3) ^ in[75];
    d_o[76] = (syndrome_o == 8'h3d) ^ in[76];
    d_o[77] = (syndrome_o == 8'h5d) ^ in[77];
    d_o[78] = (syndrome_o == 8'h9d) ^ in[78];
    d_o[79] = (syndrome_o == 8'h6d) ^ in[79];
    d_o[80] = (syndrome_o == 8'had) ^ in[80];
    d_o[81] = (syndrome_o == 8'hcd) ^ in[81];
    d_o[82] = (syndrome_o == 8'h75) ^ in[82];
    d_o[83] = (syndrome_o == 8'hb5) ^ in[83];
    d_o[84] = (syndrome_o == 8'hd5) ^ in[84];
    d_o[85] = (syndrome_o == 8'he5) ^ in[85];
    d_o[86] = (syndrome_o == 8'h79) ^ in[86];
    d_o[87] = (syndrome_o == 8'hb9) ^ in[87];
    d_o[88] = (syndrome_o == 8'hd9) ^ in[88];
    d_o[89] = (syndrome_o == 8'he9) ^ in[89];
    d_o[90] = (syndrome_o == 8'hf1) ^ in[90];
    d_o[91] = (syndrome_o == 8'h3e) ^ in[91];
    d_o[92] = (syndrome_o == 8'h5e) ^ in[92];
    d_o[93] = (syndrome_o == 8'h9e) ^ in[93];
    d_o[94] = (syndrome_o == 8'h6e) ^ in[94];
    d_o[95] = (syndrome_o == 8'hae) ^ in[95];
    d_o[96] = (syndrome_o == 8'hce) ^ in[96];
    d_o[97] = (syndrome_o == 8'h76) ^ in[97];
    d_o[98] = (syndrome_o == 8'hb6) ^ in[98];
    d_o[99] = (syndrome_o == 8'hd6) ^ in[99];
    d_o[100] = (syndrome_o == 8'he6) ^ in[100];
    d_o[101] = (syndrome_o == 8'h7a) ^ in[101];
    d_o[102] = (syndrome_o == 8'hba) ^ in[102];
    d_o[103] = (syndrome_o == 8'hda) ^ in[103];
    d_o[104] = (syndrome_o == 8'hea) ^ in[104];
    d_o[105] = (syndrome_o == 8'hf2) ^ in[105];
    d_o[106] = (syndrome_o == 8'h7c) ^ in[106];
    d_o[107] = (syndrome_o == 8'hbc) ^ in[107];
    d_o[108] = (syndrome_o == 8'hdc) ^ in[108];
    d_o[109] = (syndrome_o == 8'hec) ^ in[109];
    d_o[110] = (syndrome_o == 8'hf4) ^ in[110];
    d_o[111] = (syndrome_o == 8'hf8) ^ in[111];
    d_o[112] = (syndrome_o == 8'h7f) ^ in[112];
    d_o[113] = (syndrome_o == 8'hbf) ^ in[113];
    d_o[114] = (syndrome_o == 8'hdf) ^ in[114];
    d_o[115] = (syndrome_o == 8'hef) ^ in[115];
    d_o[116] = (syndrome_o == 8'hf7) ^ in[116];
    d_o[117] = (syndrome_o == 8'hfb) ^ in[117];
    d_o[118] = (syndrome_o == 8'hfd) ^ in[118];
    d_o[119] = (syndrome_o == 8'hfe) ^ in[119];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [255:0] prim_secded_256_247_enc (logic [246:0] in);
    logic [255:0] out;
    out[246:0] = in;
    out[247] = ^(in & 247'h403FFFFFFC00000000000003FFFFFFFFFFFFFFFFF00000000000000FFFFFFF);
    out[248] = ^(in & 247'h5FC07FFFFC00001FFFFFFFFC000000007FFFFFFFF000000001FFFFF000007F);
    out[249] = ^(in & 247'h6FDF81FFFC0FFFE0003FFFFC0007FFFF800007FFF00000FFFE0003F0001F81);
    out[250] = ^(in & 247'h77EFBE0FFDF07FE0FFC00FFC1FF801FF801FF801F003FF003E007C1003E082);
    out[251] = ^(in & 247'h7BF7DEF0FEF787EF0FC3F03DE1F87E0787E0781E10FC0F03C20784203C2104);
    out[252] = ^(in & 247'h7DFBEF771F7BB8F771DC71C6EE3B8E38B8E388E2271C711C44388841C44208);
    out[253] = ^(in & 247'h7EFDF7BB67BDDB3BB66D964B76CDB2C95B2C93244B65926488C91086488410);
    out[254] = ^(in & 247'h7F7EFBDDABDEED5DDAB6AA93BB56D5526D5525488DAAA4A91152210A910820);
    out[255] = ^(in & 247'h7FBF7DEED3EF769EED3B4D23DDA769A4769A46910ED348D221A4420D221040);
    return out;
  endfunction

  function automatic secded_256_247_t prim_secded_256_247_dec (logic [255:0] in);
    logic [246:0] d_o;
    logic [8:0] syndrome_o;
    logic [1:0]  err_o;

    secded_256_247_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 256'h00C03FFFFFFC00000000000003FFFFFFFFFFFFFFFFF00000000000000FFFFFFF);
    syndrome_o[1] = ^(in & 256'h015FC07FFFFC00001FFFFFFFFC000000007FFFFFFFF000000001FFFFF000007F);
    syndrome_o[2] = ^(in & 256'h026FDF81FFFC0FFFE0003FFFFC0007FFFF800007FFF00000FFFE0003F0001F81);
    syndrome_o[3] = ^(in & 256'h0477EFBE0FFDF07FE0FFC00FFC1FF801FF801FF801F003FF003E007C1003E082);
    syndrome_o[4] = ^(in & 256'h087BF7DEF0FEF787EF0FC3F03DE1F87E0787E0781E10FC0F03C20784203C2104);
    syndrome_o[5] = ^(in & 256'h107DFBEF771F7BB8F771DC71C6EE3B8E38B8E388E2271C711C44388841C44208);
    syndrome_o[6] = ^(in & 256'h207EFDF7BB67BDDB3BB66D964B76CDB2C95B2C93244B65926488C91086488410);
    syndrome_o[7] = ^(in & 256'h407F7EFBDDABDEED5DDAB6AA93BB56D5526D5525488DAAA4A91152210A910820);
    syndrome_o[8] = ^(in & 256'h807FBF7DEED3EF769EED3B4D23DDA769A4769A46910ED348D221A4420D221040);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 9'h7) ^ in[0];
    d_o[1] = (syndrome_o == 9'hb) ^ in[1];
    d_o[2] = (syndrome_o == 9'h13) ^ in[2];
    d_o[3] = (syndrome_o == 9'h23) ^ in[3];
    d_o[4] = (syndrome_o == 9'h43) ^ in[4];
    d_o[5] = (syndrome_o == 9'h83) ^ in[5];
    d_o[6] = (syndrome_o == 9'h103) ^ in[6];
    d_o[7] = (syndrome_o == 9'hd) ^ in[7];
    d_o[8] = (syndrome_o == 9'h15) ^ in[8];
    d_o[9] = (syndrome_o == 9'h25) ^ in[9];
    d_o[10] = (syndrome_o == 9'h45) ^ in[10];
    d_o[11] = (syndrome_o == 9'h85) ^ in[11];
    d_o[12] = (syndrome_o == 9'h105) ^ in[12];
    d_o[13] = (syndrome_o == 9'h19) ^ in[13];
    d_o[14] = (syndrome_o == 9'h29) ^ in[14];
    d_o[15] = (syndrome_o == 9'h49) ^ in[15];
    d_o[16] = (syndrome_o == 9'h89) ^ in[16];
    d_o[17] = (syndrome_o == 9'h109) ^ in[17];
    d_o[18] = (syndrome_o == 9'h31) ^ in[18];
    d_o[19] = (syndrome_o == 9'h51) ^ in[19];
    d_o[20] = (syndrome_o == 9'h91) ^ in[20];
    d_o[21] = (syndrome_o == 9'h111) ^ in[21];
    d_o[22] = (syndrome_o == 9'h61) ^ in[22];
    d_o[23] = (syndrome_o == 9'ha1) ^ in[23];
    d_o[24] = (syndrome_o == 9'h121) ^ in[24];
    d_o[25] = (syndrome_o == 9'hc1) ^ in[25];
    d_o[26] = (syndrome_o == 9'h141) ^ in[26];
    d_o[27] = (syndrome_o == 9'h181) ^ in[27];
    d_o[28] = (syndrome_o == 9'he) ^ in[28];
    d_o[29] = (syndrome_o == 9'h16) ^ in[29];
    d_o[30] = (syndrome_o == 9'h26) ^ in[30];
    d_o[31] = (syndrome_o == 9'h46) ^ in[31];
    d_o[32] = (syndrome_o == 9'h86) ^ in[32];
    d_o[33] = (syndrome_o == 9'h106) ^ in[33];
    d_o[34] = (syndrome_o == 9'h1a) ^ in[34];
    d_o[35] = (syndrome_o == 9'h2a) ^ in[35];
    d_o[36] = (syndrome_o == 9'h4a) ^ in[36];
    d_o[37] = (syndrome_o == 9'h8a) ^ in[37];
    d_o[38] = (syndrome_o == 9'h10a) ^ in[38];
    d_o[39] = (syndrome_o == 9'h32) ^ in[39];
    d_o[40] = (syndrome_o == 9'h52) ^ in[40];
    d_o[41] = (syndrome_o == 9'h92) ^ in[41];
    d_o[42] = (syndrome_o == 9'h112) ^ in[42];
    d_o[43] = (syndrome_o == 9'h62) ^ in[43];
    d_o[44] = (syndrome_o == 9'ha2) ^ in[44];
    d_o[45] = (syndrome_o == 9'h122) ^ in[45];
    d_o[46] = (syndrome_o == 9'hc2) ^ in[46];
    d_o[47] = (syndrome_o == 9'h142) ^ in[47];
    d_o[48] = (syndrome_o == 9'h182) ^ in[48];
    d_o[49] = (syndrome_o == 9'h1c) ^ in[49];
    d_o[50] = (syndrome_o == 9'h2c) ^ in[50];
    d_o[51] = (syndrome_o == 9'h4c) ^ in[51];
    d_o[52] = (syndrome_o == 9'h8c) ^ in[52];
    d_o[53] = (syndrome_o == 9'h10c) ^ in[53];
    d_o[54] = (syndrome_o == 9'h34) ^ in[54];
    d_o[55] = (syndrome_o == 9'h54) ^ in[55];
    d_o[56] = (syndrome_o == 9'h94) ^ in[56];
    d_o[57] = (syndrome_o == 9'h114) ^ in[57];
    d_o[58] = (syndrome_o == 9'h64) ^ in[58];
    d_o[59] = (syndrome_o == 9'ha4) ^ in[59];
    d_o[60] = (syndrome_o == 9'h124) ^ in[60];
    d_o[61] = (syndrome_o == 9'hc4) ^ in[61];
    d_o[62] = (syndrome_o == 9'h144) ^ in[62];
    d_o[63] = (syndrome_o == 9'h184) ^ in[63];
    d_o[64] = (syndrome_o == 9'h38) ^ in[64];
    d_o[65] = (syndrome_o == 9'h58) ^ in[65];
    d_o[66] = (syndrome_o == 9'h98) ^ in[66];
    d_o[67] = (syndrome_o == 9'h118) ^ in[67];
    d_o[68] = (syndrome_o == 9'h68) ^ in[68];
    d_o[69] = (syndrome_o == 9'ha8) ^ in[69];
    d_o[70] = (syndrome_o == 9'h128) ^ in[70];
    d_o[71] = (syndrome_o == 9'hc8) ^ in[71];
    d_o[72] = (syndrome_o == 9'h148) ^ in[72];
    d_o[73] = (syndrome_o == 9'h188) ^ in[73];
    d_o[74] = (syndrome_o == 9'h70) ^ in[74];
    d_o[75] = (syndrome_o == 9'hb0) ^ in[75];
    d_o[76] = (syndrome_o == 9'h130) ^ in[76];
    d_o[77] = (syndrome_o == 9'hd0) ^ in[77];
    d_o[78] = (syndrome_o == 9'h150) ^ in[78];
    d_o[79] = (syndrome_o == 9'h190) ^ in[79];
    d_o[80] = (syndrome_o == 9'he0) ^ in[80];
    d_o[81] = (syndrome_o == 9'h160) ^ in[81];
    d_o[82] = (syndrome_o == 9'h1a0) ^ in[82];
    d_o[83] = (syndrome_o == 9'h1c0) ^ in[83];
    d_o[84] = (syndrome_o == 9'h1f) ^ in[84];
    d_o[85] = (syndrome_o == 9'h2f) ^ in[85];
    d_o[86] = (syndrome_o == 9'h4f) ^ in[86];
    d_o[87] = (syndrome_o == 9'h8f) ^ in[87];
    d_o[88] = (syndrome_o == 9'h10f) ^ in[88];
    d_o[89] = (syndrome_o == 9'h37) ^ in[89];
    d_o[90] = (syndrome_o == 9'h57) ^ in[90];
    d_o[91] = (syndrome_o == 9'h97) ^ in[91];
    d_o[92] = (syndrome_o == 9'h117) ^ in[92];
    d_o[93] = (syndrome_o == 9'h67) ^ in[93];
    d_o[94] = (syndrome_o == 9'ha7) ^ in[94];
    d_o[95] = (syndrome_o == 9'h127) ^ in[95];
    d_o[96] = (syndrome_o == 9'hc7) ^ in[96];
    d_o[97] = (syndrome_o == 9'h147) ^ in[97];
    d_o[98] = (syndrome_o == 9'h187) ^ in[98];
    d_o[99] = (syndrome_o == 9'h3b) ^ in[99];
    d_o[100] = (syndrome_o == 9'h5b) ^ in[100];
    d_o[101] = (syndrome_o == 9'h9b) ^ in[101];
    d_o[102] = (syndrome_o == 9'h11b) ^ in[102];
    d_o[103] = (syndrome_o == 9'h6b) ^ in[103];
    d_o[104] = (syndrome_o == 9'hab) ^ in[104];
    d_o[105] = (syndrome_o == 9'h12b) ^ in[105];
    d_o[106] = (syndrome_o == 9'hcb) ^ in[106];
    d_o[107] = (syndrome_o == 9'h14b) ^ in[107];
    d_o[108] = (syndrome_o == 9'h18b) ^ in[108];
    d_o[109] = (syndrome_o == 9'h73) ^ in[109];
    d_o[110] = (syndrome_o == 9'hb3) ^ in[110];
    d_o[111] = (syndrome_o == 9'h133) ^ in[111];
    d_o[112] = (syndrome_o == 9'hd3) ^ in[112];
    d_o[113] = (syndrome_o == 9'h153) ^ in[113];
    d_o[114] = (syndrome_o == 9'h193) ^ in[114];
    d_o[115] = (syndrome_o == 9'he3) ^ in[115];
    d_o[116] = (syndrome_o == 9'h163) ^ in[116];
    d_o[117] = (syndrome_o == 9'h1a3) ^ in[117];
    d_o[118] = (syndrome_o == 9'h1c3) ^ in[118];
    d_o[119] = (syndrome_o == 9'h3d) ^ in[119];
    d_o[120] = (syndrome_o == 9'h5d) ^ in[120];
    d_o[121] = (syndrome_o == 9'h9d) ^ in[121];
    d_o[122] = (syndrome_o == 9'h11d) ^ in[122];
    d_o[123] = (syndrome_o == 9'h6d) ^ in[123];
    d_o[124] = (syndrome_o == 9'had) ^ in[124];
    d_o[125] = (syndrome_o == 9'h12d) ^ in[125];
    d_o[126] = (syndrome_o == 9'hcd) ^ in[126];
    d_o[127] = (syndrome_o == 9'h14d) ^ in[127];
    d_o[128] = (syndrome_o == 9'h18d) ^ in[128];
    d_o[129] = (syndrome_o == 9'h75) ^ in[129];
    d_o[130] = (syndrome_o == 9'hb5) ^ in[130];
    d_o[131] = (syndrome_o == 9'h135) ^ in[131];
    d_o[132] = (syndrome_o == 9'hd5) ^ in[132];
    d_o[133] = (syndrome_o == 9'h155) ^ in[133];
    d_o[134] = (syndrome_o == 9'h195) ^ in[134];
    d_o[135] = (syndrome_o == 9'he5) ^ in[135];
    d_o[136] = (syndrome_o == 9'h165) ^ in[136];
    d_o[137] = (syndrome_o == 9'h1a5) ^ in[137];
    d_o[138] = (syndrome_o == 9'h1c5) ^ in[138];
    d_o[139] = (syndrome_o == 9'h79) ^ in[139];
    d_o[140] = (syndrome_o == 9'hb9) ^ in[140];
    d_o[141] = (syndrome_o == 9'h139) ^ in[141];
    d_o[142] = (syndrome_o == 9'hd9) ^ in[142];
    d_o[143] = (syndrome_o == 9'h159) ^ in[143];
    d_o[144] = (syndrome_o == 9'h199) ^ in[144];
    d_o[145] = (syndrome_o == 9'he9) ^ in[145];
    d_o[146] = (syndrome_o == 9'h169) ^ in[146];
    d_o[147] = (syndrome_o == 9'h1a9) ^ in[147];
    d_o[148] = (syndrome_o == 9'h1c9) ^ in[148];
    d_o[149] = (syndrome_o == 9'hf1) ^ in[149];
    d_o[150] = (syndrome_o == 9'h171) ^ in[150];
    d_o[151] = (syndrome_o == 9'h1b1) ^ in[151];
    d_o[152] = (syndrome_o == 9'h1d1) ^ in[152];
    d_o[153] = (syndrome_o == 9'h1e1) ^ in[153];
    d_o[154] = (syndrome_o == 9'h3e) ^ in[154];
    d_o[155] = (syndrome_o == 9'h5e) ^ in[155];
    d_o[156] = (syndrome_o == 9'h9e) ^ in[156];
    d_o[157] = (syndrome_o == 9'h11e) ^ in[157];
    d_o[158] = (syndrome_o == 9'h6e) ^ in[158];
    d_o[159] = (syndrome_o == 9'hae) ^ in[159];
    d_o[160] = (syndrome_o == 9'h12e) ^ in[160];
    d_o[161] = (syndrome_o == 9'hce) ^ in[161];
    d_o[162] = (syndrome_o == 9'h14e) ^ in[162];
    d_o[163] = (syndrome_o == 9'h18e) ^ in[163];
    d_o[164] = (syndrome_o == 9'h76) ^ in[164];
    d_o[165] = (syndrome_o == 9'hb6) ^ in[165];
    d_o[166] = (syndrome_o == 9'h136) ^ in[166];
    d_o[167] = (syndrome_o == 9'hd6) ^ in[167];
    d_o[168] = (syndrome_o == 9'h156) ^ in[168];
    d_o[169] = (syndrome_o == 9'h196) ^ in[169];
    d_o[170] = (syndrome_o == 9'he6) ^ in[170];
    d_o[171] = (syndrome_o == 9'h166) ^ in[171];
    d_o[172] = (syndrome_o == 9'h1a6) ^ in[172];
    d_o[173] = (syndrome_o == 9'h1c6) ^ in[173];
    d_o[174] = (syndrome_o == 9'h7a) ^ in[174];
    d_o[175] = (syndrome_o == 9'hba) ^ in[175];
    d_o[176] = (syndrome_o == 9'h13a) ^ in[176];
    d_o[177] = (syndrome_o == 9'hda) ^ in[177];
    d_o[178] = (syndrome_o == 9'h15a) ^ in[178];
    d_o[179] = (syndrome_o == 9'h19a) ^ in[179];
    d_o[180] = (syndrome_o == 9'hea) ^ in[180];
    d_o[181] = (syndrome_o == 9'h16a) ^ in[181];
    d_o[182] = (syndrome_o == 9'h1aa) ^ in[182];
    d_o[183] = (syndrome_o == 9'h1ca) ^ in[183];
    d_o[184] = (syndrome_o == 9'hf2) ^ in[184];
    d_o[185] = (syndrome_o == 9'h172) ^ in[185];
    d_o[186] = (syndrome_o == 9'h1b2) ^ in[186];
    d_o[187] = (syndrome_o == 9'h1d2) ^ in[187];
    d_o[188] = (syndrome_o == 9'h1e2) ^ in[188];
    d_o[189] = (syndrome_o == 9'h7c) ^ in[189];
    d_o[190] = (syndrome_o == 9'hbc) ^ in[190];
    d_o[191] = (syndrome_o == 9'h13c) ^ in[191];
    d_o[192] = (syndrome_o == 9'hdc) ^ in[192];
    d_o[193] = (syndrome_o == 9'h15c) ^ in[193];
    d_o[194] = (syndrome_o == 9'h19c) ^ in[194];
    d_o[195] = (syndrome_o == 9'hec) ^ in[195];
    d_o[196] = (syndrome_o == 9'h16c) ^ in[196];
    d_o[197] = (syndrome_o == 9'h1ac) ^ in[197];
    d_o[198] = (syndrome_o == 9'h1cc) ^ in[198];
    d_o[199] = (syndrome_o == 9'hf4) ^ in[199];
    d_o[200] = (syndrome_o == 9'h174) ^ in[200];
    d_o[201] = (syndrome_o == 9'h1b4) ^ in[201];
    d_o[202] = (syndrome_o == 9'h1d4) ^ in[202];
    d_o[203] = (syndrome_o == 9'h1e4) ^ in[203];
    d_o[204] = (syndrome_o == 9'hf8) ^ in[204];
    d_o[205] = (syndrome_o == 9'h178) ^ in[205];
    d_o[206] = (syndrome_o == 9'h1b8) ^ in[206];
    d_o[207] = (syndrome_o == 9'h1d8) ^ in[207];
    d_o[208] = (syndrome_o == 9'h1e8) ^ in[208];
    d_o[209] = (syndrome_o == 9'h1f0) ^ in[209];
    d_o[210] = (syndrome_o == 9'h7f) ^ in[210];
    d_o[211] = (syndrome_o == 9'hbf) ^ in[211];
    d_o[212] = (syndrome_o == 9'h13f) ^ in[212];
    d_o[213] = (syndrome_o == 9'hdf) ^ in[213];
    d_o[214] = (syndrome_o == 9'h15f) ^ in[214];
    d_o[215] = (syndrome_o == 9'h19f) ^ in[215];
    d_o[216] = (syndrome_o == 9'hef) ^ in[216];
    d_o[217] = (syndrome_o == 9'h16f) ^ in[217];
    d_o[218] = (syndrome_o == 9'h1af) ^ in[218];
    d_o[219] = (syndrome_o == 9'h1cf) ^ in[219];
    d_o[220] = (syndrome_o == 9'hf7) ^ in[220];
    d_o[221] = (syndrome_o == 9'h177) ^ in[221];
    d_o[222] = (syndrome_o == 9'h1b7) ^ in[222];
    d_o[223] = (syndrome_o == 9'h1d7) ^ in[223];
    d_o[224] = (syndrome_o == 9'h1e7) ^ in[224];
    d_o[225] = (syndrome_o == 9'hfb) ^ in[225];
    d_o[226] = (syndrome_o == 9'h17b) ^ in[226];
    d_o[227] = (syndrome_o == 9'h1bb) ^ in[227];
    d_o[228] = (syndrome_o == 9'h1db) ^ in[228];
    d_o[229] = (syndrome_o == 9'h1eb) ^ in[229];
    d_o[230] = (syndrome_o == 9'h1f3) ^ in[230];
    d_o[231] = (syndrome_o == 9'hfd) ^ in[231];
    d_o[232] = (syndrome_o == 9'h17d) ^ in[232];
    d_o[233] = (syndrome_o == 9'h1bd) ^ in[233];
    d_o[234] = (syndrome_o == 9'h1dd) ^ in[234];
    d_o[235] = (syndrome_o == 9'h1ed) ^ in[235];
    d_o[236] = (syndrome_o == 9'h1f5) ^ in[236];
    d_o[237] = (syndrome_o == 9'h1f9) ^ in[237];
    d_o[238] = (syndrome_o == 9'hfe) ^ in[238];
    d_o[239] = (syndrome_o == 9'h17e) ^ in[239];
    d_o[240] = (syndrome_o == 9'h1be) ^ in[240];
    d_o[241] = (syndrome_o == 9'h1de) ^ in[241];
    d_o[242] = (syndrome_o == 9'h1ee) ^ in[242];
    d_o[243] = (syndrome_o == 9'h1f6) ^ in[243];
    d_o[244] = (syndrome_o == 9'h1fa) ^ in[244];
    d_o[245] = (syndrome_o == 9'h1fc) ^ in[245];
    d_o[246] = (syndrome_o == 9'h1ff) ^ in[246];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [511:0] prim_secded_512_502_enc (logic [501:0] in);
    logic [511:0] out;
    out[501:0] = in;
    out[502] = ^(in & 502'h1FF000000000FFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000FFFFFFFFF);
    out[503] = ^(in & 502'h2FF00FFFFFFF0000000FFFFFFFFFFFFFF00000000000000FFFFFFFFFFFFFFFFFC00000000000000000FFFFFFFFFFFFFF00000000000000FFFFFFF0000000FF);
    out[504] = ^(in & 502'h37F7F01FFFFF01FFFFF000007FFFFFFFF000007FFFFFFFF000000001FFFFFFFFC000000007FFFFFFFF000000001FFFFF000000001FFFFF000007F000007F01);
    out[505] = ^(in & 502'h3BFBF7E07FFF7E07FFF03FFF8000FFFFF03FFF8000FFFFF0001FFFFE00001FFFC0007FFFF800007FFF00000FFFE0003F00000FFFE0003F0001F810001F8102);
    out[506] = ^(in & 502'h3DFDFBEF83FFBEF83FF7C1FF83FF003FF7C1FF83FF003FF07FE007FE007FE007C1FF801FF801FF801F003FF003E007C1003FF003E007C1003E082003E08204);
    out[507] = ^(in & 502'h3EFEFDF7BC3FDF7BC3FBDE1FBC3F0FC0FBDE1FBC3F0FC0F787E1F81E1F81E0785E1F87E0787E0781E10FC0F03C2078420FC0F03C20784203C210403C210408);
    out[508] = ^(in & 502'h3F7F7EFBDDC7EFBDDC7DEEE3DDC771C71DEEE3DDC771C71BB8EE38E2E38E2388AEE3B8E38B8E388E2271C711C443888471C711C44388841C442081C4420810);
    out[509] = ^(in & 502'h3FBFBF7DEED9F7DEED9EF76CEED9B6592EF76CEED9B6592DDB36CB256CB24C91376CDB2C95B2C93244B65926488C9108B65926488C91086488410648841020);
    out[510] = ^(in & 502'h3FDFDFBEF76AFBEF76AF7BB5776ADAAA4F7BB5776ADAAA4EED5B5549B55495223BB56D5526D5525488DAAA4A91152210DAAA4A91152210A910820A91082040);
    out[511] = ^(in & 502'h3FEFEFDF7BB4FDF7BB4FBDDA7BB4ED348FBDDA7BB4ED348F769DA691DA691A443DDA769A4769A46910ED348D221A4420ED348D221A4420D221040D22104080);
    return out;
  endfunction

  function automatic secded_512_502_t prim_secded_512_502_dec (logic [511:0] in);
    logic [501:0] d_o;
    logic [9:0] syndrome_o;
    logic [1:0]  err_o;

    secded_512_502_t dec;

    logic single_error;

    // Syndrome calculation
    syndrome_o[0] = ^(in & 512'h005FF000000000FFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000FFFFFFFFF);
    syndrome_o[1] = ^(in & 512'h00AFF00FFFFFFF0000000FFFFFFFFFFFFFF00000000000000FFFFFFFFFFFFFFFFFC00000000000000000FFFFFFFFFFFFFF00000000000000FFFFFFF0000000FF);
    syndrome_o[2] = ^(in & 512'h0137F7F01FFFFF01FFFFF000007FFFFFFFF000007FFFFFFFF000000001FFFFFFFFC000000007FFFFFFFF000000001FFFFF000000001FFFFF000007F000007F01);
    syndrome_o[3] = ^(in & 512'h023BFBF7E07FFF7E07FFF03FFF8000FFFFF03FFF8000FFFFF0001FFFFE00001FFFC0007FFFF800007FFF00000FFFE0003F00000FFFE0003F0001F810001F8102);
    syndrome_o[4] = ^(in & 512'h043DFDFBEF83FFBEF83FF7C1FF83FF003FF7C1FF83FF003FF07FE007FE007FE007C1FF801FF801FF801F003FF003E007C1003FF003E007C1003E082003E08204);
    syndrome_o[5] = ^(in & 512'h083EFEFDF7BC3FDF7BC3FBDE1FBC3F0FC0FBDE1FBC3F0FC0F787E1F81E1F81E0785E1F87E0787E0781E10FC0F03C2078420FC0F03C20784203C210403C210408);
    syndrome_o[6] = ^(in & 512'h103F7F7EFBDDC7EFBDDC7DEEE3DDC771C71DEEE3DDC771C71BB8EE38E2E38E2388AEE3B8E38B8E388E2271C711C443888471C711C44388841C442081C4420810);
    syndrome_o[7] = ^(in & 512'h203FBFBF7DEED9F7DEED9EF76CEED9B6592EF76CEED9B6592DDB36CB256CB24C91376CDB2C95B2C93244B65926488C9108B65926488C91086488410648841020);
    syndrome_o[8] = ^(in & 512'h403FDFDFBEF76AFBEF76AF7BB5776ADAAA4F7BB5776ADAAA4EED5B5549B55495223BB56D5526D5525488DAAA4A91152210DAAA4A91152210A910820A91082040);
    syndrome_o[9] = ^(in & 512'h803FEFEFDF7BB4FDF7BB4FBDDA7BB4ED348FBDDA7BB4ED348F769DA691DA691A443DDA769A4769A46910ED348D221A4420ED348D221A4420D221040D22104080);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 10'h7) ^ in[0];
    d_o[1] = (syndrome_o == 10'hb) ^ in[1];
    d_o[2] = (syndrome_o == 10'h13) ^ in[2];
    d_o[3] = (syndrome_o == 10'h23) ^ in[3];
    d_o[4] = (syndrome_o == 10'h43) ^ in[4];
    d_o[5] = (syndrome_o == 10'h83) ^ in[5];
    d_o[6] = (syndrome_o == 10'h103) ^ in[6];
    d_o[7] = (syndrome_o == 10'h203) ^ in[7];
    d_o[8] = (syndrome_o == 10'hd) ^ in[8];
    d_o[9] = (syndrome_o == 10'h15) ^ in[9];
    d_o[10] = (syndrome_o == 10'h25) ^ in[10];
    d_o[11] = (syndrome_o == 10'h45) ^ in[11];
    d_o[12] = (syndrome_o == 10'h85) ^ in[12];
    d_o[13] = (syndrome_o == 10'h105) ^ in[13];
    d_o[14] = (syndrome_o == 10'h205) ^ in[14];
    d_o[15] = (syndrome_o == 10'h19) ^ in[15];
    d_o[16] = (syndrome_o == 10'h29) ^ in[16];
    d_o[17] = (syndrome_o == 10'h49) ^ in[17];
    d_o[18] = (syndrome_o == 10'h89) ^ in[18];
    d_o[19] = (syndrome_o == 10'h109) ^ in[19];
    d_o[20] = (syndrome_o == 10'h209) ^ in[20];
    d_o[21] = (syndrome_o == 10'h31) ^ in[21];
    d_o[22] = (syndrome_o == 10'h51) ^ in[22];
    d_o[23] = (syndrome_o == 10'h91) ^ in[23];
    d_o[24] = (syndrome_o == 10'h111) ^ in[24];
    d_o[25] = (syndrome_o == 10'h211) ^ in[25];
    d_o[26] = (syndrome_o == 10'h61) ^ in[26];
    d_o[27] = (syndrome_o == 10'ha1) ^ in[27];
    d_o[28] = (syndrome_o == 10'h121) ^ in[28];
    d_o[29] = (syndrome_o == 10'h221) ^ in[29];
    d_o[30] = (syndrome_o == 10'hc1) ^ in[30];
    d_o[31] = (syndrome_o == 10'h141) ^ in[31];
    d_o[32] = (syndrome_o == 10'h241) ^ in[32];
    d_o[33] = (syndrome_o == 10'h181) ^ in[33];
    d_o[34] = (syndrome_o == 10'h281) ^ in[34];
    d_o[35] = (syndrome_o == 10'h301) ^ in[35];
    d_o[36] = (syndrome_o == 10'he) ^ in[36];
    d_o[37] = (syndrome_o == 10'h16) ^ in[37];
    d_o[38] = (syndrome_o == 10'h26) ^ in[38];
    d_o[39] = (syndrome_o == 10'h46) ^ in[39];
    d_o[40] = (syndrome_o == 10'h86) ^ in[40];
    d_o[41] = (syndrome_o == 10'h106) ^ in[41];
    d_o[42] = (syndrome_o == 10'h206) ^ in[42];
    d_o[43] = (syndrome_o == 10'h1a) ^ in[43];
    d_o[44] = (syndrome_o == 10'h2a) ^ in[44];
    d_o[45] = (syndrome_o == 10'h4a) ^ in[45];
    d_o[46] = (syndrome_o == 10'h8a) ^ in[46];
    d_o[47] = (syndrome_o == 10'h10a) ^ in[47];
    d_o[48] = (syndrome_o == 10'h20a) ^ in[48];
    d_o[49] = (syndrome_o == 10'h32) ^ in[49];
    d_o[50] = (syndrome_o == 10'h52) ^ in[50];
    d_o[51] = (syndrome_o == 10'h92) ^ in[51];
    d_o[52] = (syndrome_o == 10'h112) ^ in[52];
    d_o[53] = (syndrome_o == 10'h212) ^ in[53];
    d_o[54] = (syndrome_o == 10'h62) ^ in[54];
    d_o[55] = (syndrome_o == 10'ha2) ^ in[55];
    d_o[56] = (syndrome_o == 10'h122) ^ in[56];
    d_o[57] = (syndrome_o == 10'h222) ^ in[57];
    d_o[58] = (syndrome_o == 10'hc2) ^ in[58];
    d_o[59] = (syndrome_o == 10'h142) ^ in[59];
    d_o[60] = (syndrome_o == 10'h242) ^ in[60];
    d_o[61] = (syndrome_o == 10'h182) ^ in[61];
    d_o[62] = (syndrome_o == 10'h282) ^ in[62];
    d_o[63] = (syndrome_o == 10'h302) ^ in[63];
    d_o[64] = (syndrome_o == 10'h1c) ^ in[64];
    d_o[65] = (syndrome_o == 10'h2c) ^ in[65];
    d_o[66] = (syndrome_o == 10'h4c) ^ in[66];
    d_o[67] = (syndrome_o == 10'h8c) ^ in[67];
    d_o[68] = (syndrome_o == 10'h10c) ^ in[68];
    d_o[69] = (syndrome_o == 10'h20c) ^ in[69];
    d_o[70] = (syndrome_o == 10'h34) ^ in[70];
    d_o[71] = (syndrome_o == 10'h54) ^ in[71];
    d_o[72] = (syndrome_o == 10'h94) ^ in[72];
    d_o[73] = (syndrome_o == 10'h114) ^ in[73];
    d_o[74] = (syndrome_o == 10'h214) ^ in[74];
    d_o[75] = (syndrome_o == 10'h64) ^ in[75];
    d_o[76] = (syndrome_o == 10'ha4) ^ in[76];
    d_o[77] = (syndrome_o == 10'h124) ^ in[77];
    d_o[78] = (syndrome_o == 10'h224) ^ in[78];
    d_o[79] = (syndrome_o == 10'hc4) ^ in[79];
    d_o[80] = (syndrome_o == 10'h144) ^ in[80];
    d_o[81] = (syndrome_o == 10'h244) ^ in[81];
    d_o[82] = (syndrome_o == 10'h184) ^ in[82];
    d_o[83] = (syndrome_o == 10'h284) ^ in[83];
    d_o[84] = (syndrome_o == 10'h304) ^ in[84];
    d_o[85] = (syndrome_o == 10'h38) ^ in[85];
    d_o[86] = (syndrome_o == 10'h58) ^ in[86];
    d_o[87] = (syndrome_o == 10'h98) ^ in[87];
    d_o[88] = (syndrome_o == 10'h118) ^ in[88];
    d_o[89] = (syndrome_o == 10'h218) ^ in[89];
    d_o[90] = (syndrome_o == 10'h68) ^ in[90];
    d_o[91] = (syndrome_o == 10'ha8) ^ in[91];
    d_o[92] = (syndrome_o == 10'h128) ^ in[92];
    d_o[93] = (syndrome_o == 10'h228) ^ in[93];
    d_o[94] = (syndrome_o == 10'hc8) ^ in[94];
    d_o[95] = (syndrome_o == 10'h148) ^ in[95];
    d_o[96] = (syndrome_o == 10'h248) ^ in[96];
    d_o[97] = (syndrome_o == 10'h188) ^ in[97];
    d_o[98] = (syndrome_o == 10'h288) ^ in[98];
    d_o[99] = (syndrome_o == 10'h308) ^ in[99];
    d_o[100] = (syndrome_o == 10'h70) ^ in[100];
    d_o[101] = (syndrome_o == 10'hb0) ^ in[101];
    d_o[102] = (syndrome_o == 10'h130) ^ in[102];
    d_o[103] = (syndrome_o == 10'h230) ^ in[103];
    d_o[104] = (syndrome_o == 10'hd0) ^ in[104];
    d_o[105] = (syndrome_o == 10'h150) ^ in[105];
    d_o[106] = (syndrome_o == 10'h250) ^ in[106];
    d_o[107] = (syndrome_o == 10'h190) ^ in[107];
    d_o[108] = (syndrome_o == 10'h290) ^ in[108];
    d_o[109] = (syndrome_o == 10'h310) ^ in[109];
    d_o[110] = (syndrome_o == 10'he0) ^ in[110];
    d_o[111] = (syndrome_o == 10'h160) ^ in[111];
    d_o[112] = (syndrome_o == 10'h260) ^ in[112];
    d_o[113] = (syndrome_o == 10'h1a0) ^ in[113];
    d_o[114] = (syndrome_o == 10'h2a0) ^ in[114];
    d_o[115] = (syndrome_o == 10'h320) ^ in[115];
    d_o[116] = (syndrome_o == 10'h1c0) ^ in[116];
    d_o[117] = (syndrome_o == 10'h2c0) ^ in[117];
    d_o[118] = (syndrome_o == 10'h340) ^ in[118];
    d_o[119] = (syndrome_o == 10'h380) ^ in[119];
    d_o[120] = (syndrome_o == 10'h1f) ^ in[120];
    d_o[121] = (syndrome_o == 10'h2f) ^ in[121];
    d_o[122] = (syndrome_o == 10'h4f) ^ in[122];
    d_o[123] = (syndrome_o == 10'h8f) ^ in[123];
    d_o[124] = (syndrome_o == 10'h10f) ^ in[124];
    d_o[125] = (syndrome_o == 10'h20f) ^ in[125];
    d_o[126] = (syndrome_o == 10'h37) ^ in[126];
    d_o[127] = (syndrome_o == 10'h57) ^ in[127];
    d_o[128] = (syndrome_o == 10'h97) ^ in[128];
    d_o[129] = (syndrome_o == 10'h117) ^ in[129];
    d_o[130] = (syndrome_o == 10'h217) ^ in[130];
    d_o[131] = (syndrome_o == 10'h67) ^ in[131];
    d_o[132] = (syndrome_o == 10'ha7) ^ in[132];
    d_o[133] = (syndrome_o == 10'h127) ^ in[133];
    d_o[134] = (syndrome_o == 10'h227) ^ in[134];
    d_o[135] = (syndrome_o == 10'hc7) ^ in[135];
    d_o[136] = (syndrome_o == 10'h147) ^ in[136];
    d_o[137] = (syndrome_o == 10'h247) ^ in[137];
    d_o[138] = (syndrome_o == 10'h187) ^ in[138];
    d_o[139] = (syndrome_o == 10'h287) ^ in[139];
    d_o[140] = (syndrome_o == 10'h307) ^ in[140];
    d_o[141] = (syndrome_o == 10'h3b) ^ in[141];
    d_o[142] = (syndrome_o == 10'h5b) ^ in[142];
    d_o[143] = (syndrome_o == 10'h9b) ^ in[143];
    d_o[144] = (syndrome_o == 10'h11b) ^ in[144];
    d_o[145] = (syndrome_o == 10'h21b) ^ in[145];
    d_o[146] = (syndrome_o == 10'h6b) ^ in[146];
    d_o[147] = (syndrome_o == 10'hab) ^ in[147];
    d_o[148] = (syndrome_o == 10'h12b) ^ in[148];
    d_o[149] = (syndrome_o == 10'h22b) ^ in[149];
    d_o[150] = (syndrome_o == 10'hcb) ^ in[150];
    d_o[151] = (syndrome_o == 10'h14b) ^ in[151];
    d_o[152] = (syndrome_o == 10'h24b) ^ in[152];
    d_o[153] = (syndrome_o == 10'h18b) ^ in[153];
    d_o[154] = (syndrome_o == 10'h28b) ^ in[154];
    d_o[155] = (syndrome_o == 10'h30b) ^ in[155];
    d_o[156] = (syndrome_o == 10'h73) ^ in[156];
    d_o[157] = (syndrome_o == 10'hb3) ^ in[157];
    d_o[158] = (syndrome_o == 10'h133) ^ in[158];
    d_o[159] = (syndrome_o == 10'h233) ^ in[159];
    d_o[160] = (syndrome_o == 10'hd3) ^ in[160];
    d_o[161] = (syndrome_o == 10'h153) ^ in[161];
    d_o[162] = (syndrome_o == 10'h253) ^ in[162];
    d_o[163] = (syndrome_o == 10'h193) ^ in[163];
    d_o[164] = (syndrome_o == 10'h293) ^ in[164];
    d_o[165] = (syndrome_o == 10'h313) ^ in[165];
    d_o[166] = (syndrome_o == 10'he3) ^ in[166];
    d_o[167] = (syndrome_o == 10'h163) ^ in[167];
    d_o[168] = (syndrome_o == 10'h263) ^ in[168];
    d_o[169] = (syndrome_o == 10'h1a3) ^ in[169];
    d_o[170] = (syndrome_o == 10'h2a3) ^ in[170];
    d_o[171] = (syndrome_o == 10'h323) ^ in[171];
    d_o[172] = (syndrome_o == 10'h1c3) ^ in[172];
    d_o[173] = (syndrome_o == 10'h2c3) ^ in[173];
    d_o[174] = (syndrome_o == 10'h343) ^ in[174];
    d_o[175] = (syndrome_o == 10'h383) ^ in[175];
    d_o[176] = (syndrome_o == 10'h3d) ^ in[176];
    d_o[177] = (syndrome_o == 10'h5d) ^ in[177];
    d_o[178] = (syndrome_o == 10'h9d) ^ in[178];
    d_o[179] = (syndrome_o == 10'h11d) ^ in[179];
    d_o[180] = (syndrome_o == 10'h21d) ^ in[180];
    d_o[181] = (syndrome_o == 10'h6d) ^ in[181];
    d_o[182] = (syndrome_o == 10'had) ^ in[182];
    d_o[183] = (syndrome_o == 10'h12d) ^ in[183];
    d_o[184] = (syndrome_o == 10'h22d) ^ in[184];
    d_o[185] = (syndrome_o == 10'hcd) ^ in[185];
    d_o[186] = (syndrome_o == 10'h14d) ^ in[186];
    d_o[187] = (syndrome_o == 10'h24d) ^ in[187];
    d_o[188] = (syndrome_o == 10'h18d) ^ in[188];
    d_o[189] = (syndrome_o == 10'h28d) ^ in[189];
    d_o[190] = (syndrome_o == 10'h30d) ^ in[190];
    d_o[191] = (syndrome_o == 10'h75) ^ in[191];
    d_o[192] = (syndrome_o == 10'hb5) ^ in[192];
    d_o[193] = (syndrome_o == 10'h135) ^ in[193];
    d_o[194] = (syndrome_o == 10'h235) ^ in[194];
    d_o[195] = (syndrome_o == 10'hd5) ^ in[195];
    d_o[196] = (syndrome_o == 10'h155) ^ in[196];
    d_o[197] = (syndrome_o == 10'h255) ^ in[197];
    d_o[198] = (syndrome_o == 10'h195) ^ in[198];
    d_o[199] = (syndrome_o == 10'h295) ^ in[199];
    d_o[200] = (syndrome_o == 10'h315) ^ in[200];
    d_o[201] = (syndrome_o == 10'he5) ^ in[201];
    d_o[202] = (syndrome_o == 10'h165) ^ in[202];
    d_o[203] = (syndrome_o == 10'h265) ^ in[203];
    d_o[204] = (syndrome_o == 10'h1a5) ^ in[204];
    d_o[205] = (syndrome_o == 10'h2a5) ^ in[205];
    d_o[206] = (syndrome_o == 10'h325) ^ in[206];
    d_o[207] = (syndrome_o == 10'h1c5) ^ in[207];
    d_o[208] = (syndrome_o == 10'h2c5) ^ in[208];
    d_o[209] = (syndrome_o == 10'h345) ^ in[209];
    d_o[210] = (syndrome_o == 10'h385) ^ in[210];
    d_o[211] = (syndrome_o == 10'h79) ^ in[211];
    d_o[212] = (syndrome_o == 10'hb9) ^ in[212];
    d_o[213] = (syndrome_o == 10'h139) ^ in[213];
    d_o[214] = (syndrome_o == 10'h239) ^ in[214];
    d_o[215] = (syndrome_o == 10'hd9) ^ in[215];
    d_o[216] = (syndrome_o == 10'h159) ^ in[216];
    d_o[217] = (syndrome_o == 10'h259) ^ in[217];
    d_o[218] = (syndrome_o == 10'h199) ^ in[218];
    d_o[219] = (syndrome_o == 10'h299) ^ in[219];
    d_o[220] = (syndrome_o == 10'h319) ^ in[220];
    d_o[221] = (syndrome_o == 10'he9) ^ in[221];
    d_o[222] = (syndrome_o == 10'h169) ^ in[222];
    d_o[223] = (syndrome_o == 10'h269) ^ in[223];
    d_o[224] = (syndrome_o == 10'h1a9) ^ in[224];
    d_o[225] = (syndrome_o == 10'h2a9) ^ in[225];
    d_o[226] = (syndrome_o == 10'h329) ^ in[226];
    d_o[227] = (syndrome_o == 10'h1c9) ^ in[227];
    d_o[228] = (syndrome_o == 10'h2c9) ^ in[228];
    d_o[229] = (syndrome_o == 10'h349) ^ in[229];
    d_o[230] = (syndrome_o == 10'h389) ^ in[230];
    d_o[231] = (syndrome_o == 10'hf1) ^ in[231];
    d_o[232] = (syndrome_o == 10'h171) ^ in[232];
    d_o[233] = (syndrome_o == 10'h271) ^ in[233];
    d_o[234] = (syndrome_o == 10'h1b1) ^ in[234];
    d_o[235] = (syndrome_o == 10'h2b1) ^ in[235];
    d_o[236] = (syndrome_o == 10'h331) ^ in[236];
    d_o[237] = (syndrome_o == 10'h1d1) ^ in[237];
    d_o[238] = (syndrome_o == 10'h2d1) ^ in[238];
    d_o[239] = (syndrome_o == 10'h351) ^ in[239];
    d_o[240] = (syndrome_o == 10'h391) ^ in[240];
    d_o[241] = (syndrome_o == 10'h1e1) ^ in[241];
    d_o[242] = (syndrome_o == 10'h2e1) ^ in[242];
    d_o[243] = (syndrome_o == 10'h361) ^ in[243];
    d_o[244] = (syndrome_o == 10'h3a1) ^ in[244];
    d_o[245] = (syndrome_o == 10'h3c1) ^ in[245];
    d_o[246] = (syndrome_o == 10'h3e) ^ in[246];
    d_o[247] = (syndrome_o == 10'h5e) ^ in[247];
    d_o[248] = (syndrome_o == 10'h9e) ^ in[248];
    d_o[249] = (syndrome_o == 10'h11e) ^ in[249];
    d_o[250] = (syndrome_o == 10'h21e) ^ in[250];
    d_o[251] = (syndrome_o == 10'h6e) ^ in[251];
    d_o[252] = (syndrome_o == 10'hae) ^ in[252];
    d_o[253] = (syndrome_o == 10'h12e) ^ in[253];
    d_o[254] = (syndrome_o == 10'h22e) ^ in[254];
    d_o[255] = (syndrome_o == 10'hce) ^ in[255];
    d_o[256] = (syndrome_o == 10'h14e) ^ in[256];
    d_o[257] = (syndrome_o == 10'h24e) ^ in[257];
    d_o[258] = (syndrome_o == 10'h18e) ^ in[258];
    d_o[259] = (syndrome_o == 10'h28e) ^ in[259];
    d_o[260] = (syndrome_o == 10'h30e) ^ in[260];
    d_o[261] = (syndrome_o == 10'h76) ^ in[261];
    d_o[262] = (syndrome_o == 10'hb6) ^ in[262];
    d_o[263] = (syndrome_o == 10'h136) ^ in[263];
    d_o[264] = (syndrome_o == 10'h236) ^ in[264];
    d_o[265] = (syndrome_o == 10'hd6) ^ in[265];
    d_o[266] = (syndrome_o == 10'h156) ^ in[266];
    d_o[267] = (syndrome_o == 10'h256) ^ in[267];
    d_o[268] = (syndrome_o == 10'h196) ^ in[268];
    d_o[269] = (syndrome_o == 10'h296) ^ in[269];
    d_o[270] = (syndrome_o == 10'h316) ^ in[270];
    d_o[271] = (syndrome_o == 10'he6) ^ in[271];
    d_o[272] = (syndrome_o == 10'h166) ^ in[272];
    d_o[273] = (syndrome_o == 10'h266) ^ in[273];
    d_o[274] = (syndrome_o == 10'h1a6) ^ in[274];
    d_o[275] = (syndrome_o == 10'h2a6) ^ in[275];
    d_o[276] = (syndrome_o == 10'h326) ^ in[276];
    d_o[277] = (syndrome_o == 10'h1c6) ^ in[277];
    d_o[278] = (syndrome_o == 10'h2c6) ^ in[278];
    d_o[279] = (syndrome_o == 10'h346) ^ in[279];
    d_o[280] = (syndrome_o == 10'h386) ^ in[280];
    d_o[281] = (syndrome_o == 10'h7a) ^ in[281];
    d_o[282] = (syndrome_o == 10'hba) ^ in[282];
    d_o[283] = (syndrome_o == 10'h13a) ^ in[283];
    d_o[284] = (syndrome_o == 10'h23a) ^ in[284];
    d_o[285] = (syndrome_o == 10'hda) ^ in[285];
    d_o[286] = (syndrome_o == 10'h15a) ^ in[286];
    d_o[287] = (syndrome_o == 10'h25a) ^ in[287];
    d_o[288] = (syndrome_o == 10'h19a) ^ in[288];
    d_o[289] = (syndrome_o == 10'h29a) ^ in[289];
    d_o[290] = (syndrome_o == 10'h31a) ^ in[290];
    d_o[291] = (syndrome_o == 10'hea) ^ in[291];
    d_o[292] = (syndrome_o == 10'h16a) ^ in[292];
    d_o[293] = (syndrome_o == 10'h26a) ^ in[293];
    d_o[294] = (syndrome_o == 10'h1aa) ^ in[294];
    d_o[295] = (syndrome_o == 10'h2aa) ^ in[295];
    d_o[296] = (syndrome_o == 10'h32a) ^ in[296];
    d_o[297] = (syndrome_o == 10'h1ca) ^ in[297];
    d_o[298] = (syndrome_o == 10'h2ca) ^ in[298];
    d_o[299] = (syndrome_o == 10'h34a) ^ in[299];
    d_o[300] = (syndrome_o == 10'h38a) ^ in[300];
    d_o[301] = (syndrome_o == 10'hf2) ^ in[301];
    d_o[302] = (syndrome_o == 10'h172) ^ in[302];
    d_o[303] = (syndrome_o == 10'h272) ^ in[303];
    d_o[304] = (syndrome_o == 10'h1b2) ^ in[304];
    d_o[305] = (syndrome_o == 10'h2b2) ^ in[305];
    d_o[306] = (syndrome_o == 10'h332) ^ in[306];
    d_o[307] = (syndrome_o == 10'h1d2) ^ in[307];
    d_o[308] = (syndrome_o == 10'h2d2) ^ in[308];
    d_o[309] = (syndrome_o == 10'h352) ^ in[309];
    d_o[310] = (syndrome_o == 10'h392) ^ in[310];
    d_o[311] = (syndrome_o == 10'h1e2) ^ in[311];
    d_o[312] = (syndrome_o == 10'h2e2) ^ in[312];
    d_o[313] = (syndrome_o == 10'h362) ^ in[313];
    d_o[314] = (syndrome_o == 10'h3a2) ^ in[314];
    d_o[315] = (syndrome_o == 10'h3c2) ^ in[315];
    d_o[316] = (syndrome_o == 10'h7c) ^ in[316];
    d_o[317] = (syndrome_o == 10'hbc) ^ in[317];
    d_o[318] = (syndrome_o == 10'h13c) ^ in[318];
    d_o[319] = (syndrome_o == 10'h23c) ^ in[319];
    d_o[320] = (syndrome_o == 10'hdc) ^ in[320];
    d_o[321] = (syndrome_o == 10'h15c) ^ in[321];
    d_o[322] = (syndrome_o == 10'h25c) ^ in[322];
    d_o[323] = (syndrome_o == 10'h19c) ^ in[323];
    d_o[324] = (syndrome_o == 10'h29c) ^ in[324];
    d_o[325] = (syndrome_o == 10'h31c) ^ in[325];
    d_o[326] = (syndrome_o == 10'hec) ^ in[326];
    d_o[327] = (syndrome_o == 10'h16c) ^ in[327];
    d_o[328] = (syndrome_o == 10'h26c) ^ in[328];
    d_o[329] = (syndrome_o == 10'h1ac) ^ in[329];
    d_o[330] = (syndrome_o == 10'h2ac) ^ in[330];
    d_o[331] = (syndrome_o == 10'h32c) ^ in[331];
    d_o[332] = (syndrome_o == 10'h1cc) ^ in[332];
    d_o[333] = (syndrome_o == 10'h2cc) ^ in[333];
    d_o[334] = (syndrome_o == 10'h34c) ^ in[334];
    d_o[335] = (syndrome_o == 10'h38c) ^ in[335];
    d_o[336] = (syndrome_o == 10'hf4) ^ in[336];
    d_o[337] = (syndrome_o == 10'h174) ^ in[337];
    d_o[338] = (syndrome_o == 10'h274) ^ in[338];
    d_o[339] = (syndrome_o == 10'h1b4) ^ in[339];
    d_o[340] = (syndrome_o == 10'h2b4) ^ in[340];
    d_o[341] = (syndrome_o == 10'h334) ^ in[341];
    d_o[342] = (syndrome_o == 10'h1d4) ^ in[342];
    d_o[343] = (syndrome_o == 10'h2d4) ^ in[343];
    d_o[344] = (syndrome_o == 10'h354) ^ in[344];
    d_o[345] = (syndrome_o == 10'h394) ^ in[345];
    d_o[346] = (syndrome_o == 10'h1e4) ^ in[346];
    d_o[347] = (syndrome_o == 10'h2e4) ^ in[347];
    d_o[348] = (syndrome_o == 10'h364) ^ in[348];
    d_o[349] = (syndrome_o == 10'h3a4) ^ in[349];
    d_o[350] = (syndrome_o == 10'h3c4) ^ in[350];
    d_o[351] = (syndrome_o == 10'hf8) ^ in[351];
    d_o[352] = (syndrome_o == 10'h178) ^ in[352];
    d_o[353] = (syndrome_o == 10'h278) ^ in[353];
    d_o[354] = (syndrome_o == 10'h1b8) ^ in[354];
    d_o[355] = (syndrome_o == 10'h2b8) ^ in[355];
    d_o[356] = (syndrome_o == 10'h338) ^ in[356];
    d_o[357] = (syndrome_o == 10'h1d8) ^ in[357];
    d_o[358] = (syndrome_o == 10'h2d8) ^ in[358];
    d_o[359] = (syndrome_o == 10'h358) ^ in[359];
    d_o[360] = (syndrome_o == 10'h398) ^ in[360];
    d_o[361] = (syndrome_o == 10'h1e8) ^ in[361];
    d_o[362] = (syndrome_o == 10'h2e8) ^ in[362];
    d_o[363] = (syndrome_o == 10'h368) ^ in[363];
    d_o[364] = (syndrome_o == 10'h3a8) ^ in[364];
    d_o[365] = (syndrome_o == 10'h3c8) ^ in[365];
    d_o[366] = (syndrome_o == 10'h1f0) ^ in[366];
    d_o[367] = (syndrome_o == 10'h2f0) ^ in[367];
    d_o[368] = (syndrome_o == 10'h370) ^ in[368];
    d_o[369] = (syndrome_o == 10'h3b0) ^ in[369];
    d_o[370] = (syndrome_o == 10'h3d0) ^ in[370];
    d_o[371] = (syndrome_o == 10'h3e0) ^ in[371];
    d_o[372] = (syndrome_o == 10'h7f) ^ in[372];
    d_o[373] = (syndrome_o == 10'hbf) ^ in[373];
    d_o[374] = (syndrome_o == 10'h13f) ^ in[374];
    d_o[375] = (syndrome_o == 10'h23f) ^ in[375];
    d_o[376] = (syndrome_o == 10'hdf) ^ in[376];
    d_o[377] = (syndrome_o == 10'h15f) ^ in[377];
    d_o[378] = (syndrome_o == 10'h25f) ^ in[378];
    d_o[379] = (syndrome_o == 10'h19f) ^ in[379];
    d_o[380] = (syndrome_o == 10'h29f) ^ in[380];
    d_o[381] = (syndrome_o == 10'h31f) ^ in[381];
    d_o[382] = (syndrome_o == 10'hef) ^ in[382];
    d_o[383] = (syndrome_o == 10'h16f) ^ in[383];
    d_o[384] = (syndrome_o == 10'h26f) ^ in[384];
    d_o[385] = (syndrome_o == 10'h1af) ^ in[385];
    d_o[386] = (syndrome_o == 10'h2af) ^ in[386];
    d_o[387] = (syndrome_o == 10'h32f) ^ in[387];
    d_o[388] = (syndrome_o == 10'h1cf) ^ in[388];
    d_o[389] = (syndrome_o == 10'h2cf) ^ in[389];
    d_o[390] = (syndrome_o == 10'h34f) ^ in[390];
    d_o[391] = (syndrome_o == 10'h38f) ^ in[391];
    d_o[392] = (syndrome_o == 10'hf7) ^ in[392];
    d_o[393] = (syndrome_o == 10'h177) ^ in[393];
    d_o[394] = (syndrome_o == 10'h277) ^ in[394];
    d_o[395] = (syndrome_o == 10'h1b7) ^ in[395];
    d_o[396] = (syndrome_o == 10'h2b7) ^ in[396];
    d_o[397] = (syndrome_o == 10'h337) ^ in[397];
    d_o[398] = (syndrome_o == 10'h1d7) ^ in[398];
    d_o[399] = (syndrome_o == 10'h2d7) ^ in[399];
    d_o[400] = (syndrome_o == 10'h357) ^ in[400];
    d_o[401] = (syndrome_o == 10'h397) ^ in[401];
    d_o[402] = (syndrome_o == 10'h1e7) ^ in[402];
    d_o[403] = (syndrome_o == 10'h2e7) ^ in[403];
    d_o[404] = (syndrome_o == 10'h367) ^ in[404];
    d_o[405] = (syndrome_o == 10'h3a7) ^ in[405];
    d_o[406] = (syndrome_o == 10'h3c7) ^ in[406];
    d_o[407] = (syndrome_o == 10'hfb) ^ in[407];
    d_o[408] = (syndrome_o == 10'h17b) ^ in[408];
    d_o[409] = (syndrome_o == 10'h27b) ^ in[409];
    d_o[410] = (syndrome_o == 10'h1bb) ^ in[410];
    d_o[411] = (syndrome_o == 10'h2bb) ^ in[411];
    d_o[412] = (syndrome_o == 10'h33b) ^ in[412];
    d_o[413] = (syndrome_o == 10'h1db) ^ in[413];
    d_o[414] = (syndrome_o == 10'h2db) ^ in[414];
    d_o[415] = (syndrome_o == 10'h35b) ^ in[415];
    d_o[416] = (syndrome_o == 10'h39b) ^ in[416];
    d_o[417] = (syndrome_o == 10'h1eb) ^ in[417];
    d_o[418] = (syndrome_o == 10'h2eb) ^ in[418];
    d_o[419] = (syndrome_o == 10'h36b) ^ in[419];
    d_o[420] = (syndrome_o == 10'h3ab) ^ in[420];
    d_o[421] = (syndrome_o == 10'h3cb) ^ in[421];
    d_o[422] = (syndrome_o == 10'h1f3) ^ in[422];
    d_o[423] = (syndrome_o == 10'h2f3) ^ in[423];
    d_o[424] = (syndrome_o == 10'h373) ^ in[424];
    d_o[425] = (syndrome_o == 10'h3b3) ^ in[425];
    d_o[426] = (syndrome_o == 10'h3d3) ^ in[426];
    d_o[427] = (syndrome_o == 10'h3e3) ^ in[427];
    d_o[428] = (syndrome_o == 10'hfd) ^ in[428];
    d_o[429] = (syndrome_o == 10'h17d) ^ in[429];
    d_o[430] = (syndrome_o == 10'h27d) ^ in[430];
    d_o[431] = (syndrome_o == 10'h1bd) ^ in[431];
    d_o[432] = (syndrome_o == 10'h2bd) ^ in[432];
    d_o[433] = (syndrome_o == 10'h33d) ^ in[433];
    d_o[434] = (syndrome_o == 10'h1dd) ^ in[434];
    d_o[435] = (syndrome_o == 10'h2dd) ^ in[435];
    d_o[436] = (syndrome_o == 10'h35d) ^ in[436];
    d_o[437] = (syndrome_o == 10'h39d) ^ in[437];
    d_o[438] = (syndrome_o == 10'h1ed) ^ in[438];
    d_o[439] = (syndrome_o == 10'h2ed) ^ in[439];
    d_o[440] = (syndrome_o == 10'h36d) ^ in[440];
    d_o[441] = (syndrome_o == 10'h3ad) ^ in[441];
    d_o[442] = (syndrome_o == 10'h3cd) ^ in[442];
    d_o[443] = (syndrome_o == 10'h1f5) ^ in[443];
    d_o[444] = (syndrome_o == 10'h2f5) ^ in[444];
    d_o[445] = (syndrome_o == 10'h375) ^ in[445];
    d_o[446] = (syndrome_o == 10'h3b5) ^ in[446];
    d_o[447] = (syndrome_o == 10'h3d5) ^ in[447];
    d_o[448] = (syndrome_o == 10'h3e5) ^ in[448];
    d_o[449] = (syndrome_o == 10'h1f9) ^ in[449];
    d_o[450] = (syndrome_o == 10'h2f9) ^ in[450];
    d_o[451] = (syndrome_o == 10'h379) ^ in[451];
    d_o[452] = (syndrome_o == 10'h3b9) ^ in[452];
    d_o[453] = (syndrome_o == 10'h3d9) ^ in[453];
    d_o[454] = (syndrome_o == 10'h3e9) ^ in[454];
    d_o[455] = (syndrome_o == 10'h3f1) ^ in[455];
    d_o[456] = (syndrome_o == 10'hfe) ^ in[456];
    d_o[457] = (syndrome_o == 10'h17e) ^ in[457];
    d_o[458] = (syndrome_o == 10'h27e) ^ in[458];
    d_o[459] = (syndrome_o == 10'h1be) ^ in[459];
    d_o[460] = (syndrome_o == 10'h2be) ^ in[460];
    d_o[461] = (syndrome_o == 10'h33e) ^ in[461];
    d_o[462] = (syndrome_o == 10'h1de) ^ in[462];
    d_o[463] = (syndrome_o == 10'h2de) ^ in[463];
    d_o[464] = (syndrome_o == 10'h35e) ^ in[464];
    d_o[465] = (syndrome_o == 10'h39e) ^ in[465];
    d_o[466] = (syndrome_o == 10'h1ee) ^ in[466];
    d_o[467] = (syndrome_o == 10'h2ee) ^ in[467];
    d_o[468] = (syndrome_o == 10'h36e) ^ in[468];
    d_o[469] = (syndrome_o == 10'h3ae) ^ in[469];
    d_o[470] = (syndrome_o == 10'h3ce) ^ in[470];
    d_o[471] = (syndrome_o == 10'h1f6) ^ in[471];
    d_o[472] = (syndrome_o == 10'h2f6) ^ in[472];
    d_o[473] = (syndrome_o == 10'h376) ^ in[473];
    d_o[474] = (syndrome_o == 10'h3b6) ^ in[474];
    d_o[475] = (syndrome_o == 10'h3d6) ^ in[475];
    d_o[476] = (syndrome_o == 10'h3e6) ^ in[476];
    d_o[477] = (syndrome_o == 10'h1fa) ^ in[477];
    d_o[478] = (syndrome_o == 10'h2fa) ^ in[478];
    d_o[479] = (syndrome_o == 10'h37a) ^ in[479];
    d_o[480] = (syndrome_o == 10'h3ba) ^ in[480];
    d_o[481] = (syndrome_o == 10'h3da) ^ in[481];
    d_o[482] = (syndrome_o == 10'h3ea) ^ in[482];
    d_o[483] = (syndrome_o == 10'h3f2) ^ in[483];
    d_o[484] = (syndrome_o == 10'h1fc) ^ in[484];
    d_o[485] = (syndrome_o == 10'h2fc) ^ in[485];
    d_o[486] = (syndrome_o == 10'h37c) ^ in[486];
    d_o[487] = (syndrome_o == 10'h3bc) ^ in[487];
    d_o[488] = (syndrome_o == 10'h3dc) ^ in[488];
    d_o[489] = (syndrome_o == 10'h3ec) ^ in[489];
    d_o[490] = (syndrome_o == 10'h3f4) ^ in[490];
    d_o[491] = (syndrome_o == 10'h3f8) ^ in[491];
    d_o[492] = (syndrome_o == 10'h1ff) ^ in[492];
    d_o[493] = (syndrome_o == 10'h2ff) ^ in[493];
    d_o[494] = (syndrome_o == 10'h37f) ^ in[494];
    d_o[495] = (syndrome_o == 10'h3bf) ^ in[495];
    d_o[496] = (syndrome_o == 10'h3df) ^ in[496];
    d_o[497] = (syndrome_o == 10'h3ef) ^ in[497];
    d_o[498] = (syndrome_o == 10'h3f7) ^ in[498];
    d_o[499] = (syndrome_o == 10'h3fb) ^ in[499];
    d_o[500] = (syndrome_o == 10'h3fd) ^ in[500];
    d_o[501] = (syndrome_o == 10'h3fe) ^ in[501];

    // err_o calc. bit0: single error, bit1: double error
    single_error = ^syndrome_o;
    err_o[0] = single_error;
    err_o[1] = ~single_error & (|syndrome_o);

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [21:0] prim_secded_hamming_22_16_enc (logic [15:0] in);
    logic [21:0] out;
    out[15:0] = in;
    out[16] = ^(in & 16'hAD5B);
    out[17] = ^(in & 16'h366D);
    out[18] = ^(in & 16'hC78E);
    out[19] = ^(in & 16'h07F0);
    out[20] = ^(in & 16'hF800);
    out[21] = ^(in & 16'h5CB7);
    return out;
  endfunction

  function automatic secded_hamming_22_16_t prim_secded_hamming_22_16_dec (logic [21:0] in);
    logic [15:0] d_o;
    logic [5:0] syndrome_o;
    logic [1:0]  err_o;

    secded_hamming_22_16_t dec;


    // Syndrome calculation
    syndrome_o[0] = ^(in & 22'h01AD5B);
    syndrome_o[1] = ^(in & 22'h02366D);
    syndrome_o[2] = ^(in & 22'h04C78E);
    syndrome_o[3] = ^(in & 22'h0807F0);
    syndrome_o[4] = ^(in & 22'h10F800);
    syndrome_o[5] = ^(in & 22'h205CB7);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 6'h23) ^ in[0];
    d_o[1] = (syndrome_o == 6'h25) ^ in[1];
    d_o[2] = (syndrome_o == 6'h26) ^ in[2];
    d_o[3] = (syndrome_o == 6'h7) ^ in[3];
    d_o[4] = (syndrome_o == 6'h29) ^ in[4];
    d_o[5] = (syndrome_o == 6'h2a) ^ in[5];
    d_o[6] = (syndrome_o == 6'hb) ^ in[6];
    d_o[7] = (syndrome_o == 6'h2c) ^ in[7];
    d_o[8] = (syndrome_o == 6'hd) ^ in[8];
    d_o[9] = (syndrome_o == 6'he) ^ in[9];
    d_o[10] = (syndrome_o == 6'h2f) ^ in[10];
    d_o[11] = (syndrome_o == 6'h31) ^ in[11];
    d_o[12] = (syndrome_o == 6'h32) ^ in[12];
    d_o[13] = (syndrome_o == 6'h13) ^ in[13];
    d_o[14] = (syndrome_o == 6'h34) ^ in[14];
    d_o[15] = (syndrome_o == 6'h15) ^ in[15];

    // err_o calc. bit0: single error, bit1: double error
    err_o[0] = syndrome_o[5];
    err_o[1] = |syndrome_o[4:0] & ~syndrome_o[5];

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [38:0] prim_secded_hamming_39_32_enc (logic [31:0] in);
    logic [38:0] out;
    out[31:0] = in;
    out[32] = ^(in & 32'h56AAAD5B);
    out[33] = ^(in & 32'h9B33366D);
    out[34] = ^(in & 32'hE3C3C78E);
    out[35] = ^(in & 32'h03FC07F0);
    out[36] = ^(in & 32'h03FFF800);
    out[37] = ^(in & 32'hFC000000);
    out[38] = ^(in & 32'h2DA65CB7);
    return out;
  endfunction

  function automatic secded_hamming_39_32_t prim_secded_hamming_39_32_dec (logic [38:0] in);
    logic [31:0] d_o;
    logic [6:0] syndrome_o;
    logic [1:0]  err_o;

    secded_hamming_39_32_t dec;


    // Syndrome calculation
    syndrome_o[0] = ^(in & 39'h0156AAAD5B);
    syndrome_o[1] = ^(in & 39'h029B33366D);
    syndrome_o[2] = ^(in & 39'h04E3C3C78E);
    syndrome_o[3] = ^(in & 39'h0803FC07F0);
    syndrome_o[4] = ^(in & 39'h1003FFF800);
    syndrome_o[5] = ^(in & 39'h20FC000000);
    syndrome_o[6] = ^(in & 39'h402DA65CB7);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 7'h43) ^ in[0];
    d_o[1] = (syndrome_o == 7'h45) ^ in[1];
    d_o[2] = (syndrome_o == 7'h46) ^ in[2];
    d_o[3] = (syndrome_o == 7'h7) ^ in[3];
    d_o[4] = (syndrome_o == 7'h49) ^ in[4];
    d_o[5] = (syndrome_o == 7'h4a) ^ in[5];
    d_o[6] = (syndrome_o == 7'hb) ^ in[6];
    d_o[7] = (syndrome_o == 7'h4c) ^ in[7];
    d_o[8] = (syndrome_o == 7'hd) ^ in[8];
    d_o[9] = (syndrome_o == 7'he) ^ in[9];
    d_o[10] = (syndrome_o == 7'h4f) ^ in[10];
    d_o[11] = (syndrome_o == 7'h51) ^ in[11];
    d_o[12] = (syndrome_o == 7'h52) ^ in[12];
    d_o[13] = (syndrome_o == 7'h13) ^ in[13];
    d_o[14] = (syndrome_o == 7'h54) ^ in[14];
    d_o[15] = (syndrome_o == 7'h15) ^ in[15];
    d_o[16] = (syndrome_o == 7'h16) ^ in[16];
    d_o[17] = (syndrome_o == 7'h57) ^ in[17];
    d_o[18] = (syndrome_o == 7'h58) ^ in[18];
    d_o[19] = (syndrome_o == 7'h19) ^ in[19];
    d_o[20] = (syndrome_o == 7'h1a) ^ in[20];
    d_o[21] = (syndrome_o == 7'h5b) ^ in[21];
    d_o[22] = (syndrome_o == 7'h1c) ^ in[22];
    d_o[23] = (syndrome_o == 7'h5d) ^ in[23];
    d_o[24] = (syndrome_o == 7'h5e) ^ in[24];
    d_o[25] = (syndrome_o == 7'h1f) ^ in[25];
    d_o[26] = (syndrome_o == 7'h61) ^ in[26];
    d_o[27] = (syndrome_o == 7'h62) ^ in[27];
    d_o[28] = (syndrome_o == 7'h23) ^ in[28];
    d_o[29] = (syndrome_o == 7'h64) ^ in[29];
    d_o[30] = (syndrome_o == 7'h25) ^ in[30];
    d_o[31] = (syndrome_o == 7'h26) ^ in[31];

    // err_o calc. bit0: single error, bit1: double error
    err_o[0] = syndrome_o[6];
    err_o[1] = |syndrome_o[5:0] & ~syndrome_o[6];

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction

  function automatic logic [71:0] prim_secded_hamming_72_64_enc (logic [63:0] in);
    logic [71:0] out;
    out[63:0] = in;
    out[64] = ^(in & 64'hAB55555556AAAD5B);
    out[65] = ^(in & 64'hCD9999999B33366D);
    out[66] = ^(in & 64'hF1E1E1E1E3C3C78E);
    out[67] = ^(in & 64'h01FE01FE03FC07F0);
    out[68] = ^(in & 64'h01FFFE0003FFF800);
    out[69] = ^(in & 64'h01FFFFFFFC000000);
    out[70] = ^(in & 64'hFE00000000000000);
    out[71] = ^(in & 64'h972CD2D32DA65CB7);
    return out;
  endfunction

  function automatic secded_hamming_72_64_t prim_secded_hamming_72_64_dec (logic [71:0] in);
    logic [63:0] d_o;
    logic [7:0] syndrome_o;
    logic [1:0]  err_o;

    secded_hamming_72_64_t dec;


    // Syndrome calculation
    syndrome_o[0] = ^(in & 72'h01AB55555556AAAD5B);
    syndrome_o[1] = ^(in & 72'h02CD9999999B33366D);
    syndrome_o[2] = ^(in & 72'h04F1E1E1E1E3C3C78E);
    syndrome_o[3] = ^(in & 72'h0801FE01FE03FC07F0);
    syndrome_o[4] = ^(in & 72'h1001FFFE0003FFF800);
    syndrome_o[5] = ^(in & 72'h2001FFFFFFFC000000);
    syndrome_o[6] = ^(in & 72'h40FE00000000000000);
    syndrome_o[7] = ^(in & 72'h80972CD2D32DA65CB7);

    // Corrected output calculation
    d_o[0] = (syndrome_o == 8'h83) ^ in[0];
    d_o[1] = (syndrome_o == 8'h85) ^ in[1];
    d_o[2] = (syndrome_o == 8'h86) ^ in[2];
    d_o[3] = (syndrome_o == 8'h7) ^ in[3];
    d_o[4] = (syndrome_o == 8'h89) ^ in[4];
    d_o[5] = (syndrome_o == 8'h8a) ^ in[5];
    d_o[6] = (syndrome_o == 8'hb) ^ in[6];
    d_o[7] = (syndrome_o == 8'h8c) ^ in[7];
    d_o[8] = (syndrome_o == 8'hd) ^ in[8];
    d_o[9] = (syndrome_o == 8'he) ^ in[9];
    d_o[10] = (syndrome_o == 8'h8f) ^ in[10];
    d_o[11] = (syndrome_o == 8'h91) ^ in[11];
    d_o[12] = (syndrome_o == 8'h92) ^ in[12];
    d_o[13] = (syndrome_o == 8'h13) ^ in[13];
    d_o[14] = (syndrome_o == 8'h94) ^ in[14];
    d_o[15] = (syndrome_o == 8'h15) ^ in[15];
    d_o[16] = (syndrome_o == 8'h16) ^ in[16];
    d_o[17] = (syndrome_o == 8'h97) ^ in[17];
    d_o[18] = (syndrome_o == 8'h98) ^ in[18];
    d_o[19] = (syndrome_o == 8'h19) ^ in[19];
    d_o[20] = (syndrome_o == 8'h1a) ^ in[20];
    d_o[21] = (syndrome_o == 8'h9b) ^ in[21];
    d_o[22] = (syndrome_o == 8'h1c) ^ in[22];
    d_o[23] = (syndrome_o == 8'h9d) ^ in[23];
    d_o[24] = (syndrome_o == 8'h9e) ^ in[24];
    d_o[25] = (syndrome_o == 8'h1f) ^ in[25];
    d_o[26] = (syndrome_o == 8'ha1) ^ in[26];
    d_o[27] = (syndrome_o == 8'ha2) ^ in[27];
    d_o[28] = (syndrome_o == 8'h23) ^ in[28];
    d_o[29] = (syndrome_o == 8'ha4) ^ in[29];
    d_o[30] = (syndrome_o == 8'h25) ^ in[30];
    d_o[31] = (syndrome_o == 8'h26) ^ in[31];
    d_o[32] = (syndrome_o == 8'ha7) ^ in[32];
    d_o[33] = (syndrome_o == 8'ha8) ^ in[33];
    d_o[34] = (syndrome_o == 8'h29) ^ in[34];
    d_o[35] = (syndrome_o == 8'h2a) ^ in[35];
    d_o[36] = (syndrome_o == 8'hab) ^ in[36];
    d_o[37] = (syndrome_o == 8'h2c) ^ in[37];
    d_o[38] = (syndrome_o == 8'had) ^ in[38];
    d_o[39] = (syndrome_o == 8'hae) ^ in[39];
    d_o[40] = (syndrome_o == 8'h2f) ^ in[40];
    d_o[41] = (syndrome_o == 8'hb0) ^ in[41];
    d_o[42] = (syndrome_o == 8'h31) ^ in[42];
    d_o[43] = (syndrome_o == 8'h32) ^ in[43];
    d_o[44] = (syndrome_o == 8'hb3) ^ in[44];
    d_o[45] = (syndrome_o == 8'h34) ^ in[45];
    d_o[46] = (syndrome_o == 8'hb5) ^ in[46];
    d_o[47] = (syndrome_o == 8'hb6) ^ in[47];
    d_o[48] = (syndrome_o == 8'h37) ^ in[48];
    d_o[49] = (syndrome_o == 8'h38) ^ in[49];
    d_o[50] = (syndrome_o == 8'hb9) ^ in[50];
    d_o[51] = (syndrome_o == 8'hba) ^ in[51];
    d_o[52] = (syndrome_o == 8'h3b) ^ in[52];
    d_o[53] = (syndrome_o == 8'hbc) ^ in[53];
    d_o[54] = (syndrome_o == 8'h3d) ^ in[54];
    d_o[55] = (syndrome_o == 8'h3e) ^ in[55];
    d_o[56] = (syndrome_o == 8'hbf) ^ in[56];
    d_o[57] = (syndrome_o == 8'hc1) ^ in[57];
    d_o[58] = (syndrome_o == 8'hc2) ^ in[58];
    d_o[59] = (syndrome_o == 8'h43) ^ in[59];
    d_o[60] = (syndrome_o == 8'hc4) ^ in[60];
    d_o[61] = (syndrome_o == 8'h45) ^ in[61];
    d_o[62] = (syndrome_o == 8'h46) ^ in[62];
    d_o[63] = (syndrome_o == 8'hc7) ^ in[63];

    // err_o calc. bit0: single error, bit1: double error
    err_o[0] = syndrome_o[7];
    err_o[1] = |syndrome_o[6:0] & ~syndrome_o[7];

    dec.data      = d_o;
    dec.syndrome  = syndrome_o;
    dec.err       = err_o;
    return dec;

  endfunction


endpackage
