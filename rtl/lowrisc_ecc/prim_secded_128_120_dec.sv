// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// SECDED Decoder generated by
// util/design/secded_gen.py -m 8 -k 120 -s 1592631616 -c hsiao

module prim_secded_128_120_dec (
  input        [127:0] in,
  output logic [119:0] d_o,
  output logic [7:0] syndrome_o,
  output logic [1:0] err_o
);

  logic single_error;

  // Syndrome calculation
  assign syndrome_o[0] = ^(in & 128'h017F000007FFFFFFFF000000001FFFFF);
  assign syndrome_o[1] = ^(in & 128'h02BF03FFF8000FFFFF00000FFFE0003F);
  assign syndrome_o[2] = ^(in & 128'h04DF7C1FF83FF003FF003FF003E007C1);
  assign syndrome_o[3] = ^(in & 128'h08EFBDE1FBC3F0FC0F0FC0F03C207842);
  assign syndrome_o[4] = ^(in & 128'h10F7DEEE3DDC771C7171C711C4438884);
  assign syndrome_o[5] = ^(in & 128'h20FBEF76CEED9B6592B65926488C9108);
  assign syndrome_o[6] = ^(in & 128'h40FDF7BB5776ADAAA4DAAA4A91152210);
  assign syndrome_o[7] = ^(in & 128'h80FEFBDDA7BB4ED348ED348D221A4420);

  // Corrected output calculation
  assign d_o[0] = (syndrome_o == 8'h7) ^ in[0];
  assign d_o[1] = (syndrome_o == 8'hb) ^ in[1];
  assign d_o[2] = (syndrome_o == 8'h13) ^ in[2];
  assign d_o[3] = (syndrome_o == 8'h23) ^ in[3];
  assign d_o[4] = (syndrome_o == 8'h43) ^ in[4];
  assign d_o[5] = (syndrome_o == 8'h83) ^ in[5];
  assign d_o[6] = (syndrome_o == 8'hd) ^ in[6];
  assign d_o[7] = (syndrome_o == 8'h15) ^ in[7];
  assign d_o[8] = (syndrome_o == 8'h25) ^ in[8];
  assign d_o[9] = (syndrome_o == 8'h45) ^ in[9];
  assign d_o[10] = (syndrome_o == 8'h85) ^ in[10];
  assign d_o[11] = (syndrome_o == 8'h19) ^ in[11];
  assign d_o[12] = (syndrome_o == 8'h29) ^ in[12];
  assign d_o[13] = (syndrome_o == 8'h49) ^ in[13];
  assign d_o[14] = (syndrome_o == 8'h89) ^ in[14];
  assign d_o[15] = (syndrome_o == 8'h31) ^ in[15];
  assign d_o[16] = (syndrome_o == 8'h51) ^ in[16];
  assign d_o[17] = (syndrome_o == 8'h91) ^ in[17];
  assign d_o[18] = (syndrome_o == 8'h61) ^ in[18];
  assign d_o[19] = (syndrome_o == 8'ha1) ^ in[19];
  assign d_o[20] = (syndrome_o == 8'hc1) ^ in[20];
  assign d_o[21] = (syndrome_o == 8'he) ^ in[21];
  assign d_o[22] = (syndrome_o == 8'h16) ^ in[22];
  assign d_o[23] = (syndrome_o == 8'h26) ^ in[23];
  assign d_o[24] = (syndrome_o == 8'h46) ^ in[24];
  assign d_o[25] = (syndrome_o == 8'h86) ^ in[25];
  assign d_o[26] = (syndrome_o == 8'h1a) ^ in[26];
  assign d_o[27] = (syndrome_o == 8'h2a) ^ in[27];
  assign d_o[28] = (syndrome_o == 8'h4a) ^ in[28];
  assign d_o[29] = (syndrome_o == 8'h8a) ^ in[29];
  assign d_o[30] = (syndrome_o == 8'h32) ^ in[30];
  assign d_o[31] = (syndrome_o == 8'h52) ^ in[31];
  assign d_o[32] = (syndrome_o == 8'h92) ^ in[32];
  assign d_o[33] = (syndrome_o == 8'h62) ^ in[33];
  assign d_o[34] = (syndrome_o == 8'ha2) ^ in[34];
  assign d_o[35] = (syndrome_o == 8'hc2) ^ in[35];
  assign d_o[36] = (syndrome_o == 8'h1c) ^ in[36];
  assign d_o[37] = (syndrome_o == 8'h2c) ^ in[37];
  assign d_o[38] = (syndrome_o == 8'h4c) ^ in[38];
  assign d_o[39] = (syndrome_o == 8'h8c) ^ in[39];
  assign d_o[40] = (syndrome_o == 8'h34) ^ in[40];
  assign d_o[41] = (syndrome_o == 8'h54) ^ in[41];
  assign d_o[42] = (syndrome_o == 8'h94) ^ in[42];
  assign d_o[43] = (syndrome_o == 8'h64) ^ in[43];
  assign d_o[44] = (syndrome_o == 8'ha4) ^ in[44];
  assign d_o[45] = (syndrome_o == 8'hc4) ^ in[45];
  assign d_o[46] = (syndrome_o == 8'h38) ^ in[46];
  assign d_o[47] = (syndrome_o == 8'h58) ^ in[47];
  assign d_o[48] = (syndrome_o == 8'h98) ^ in[48];
  assign d_o[49] = (syndrome_o == 8'h68) ^ in[49];
  assign d_o[50] = (syndrome_o == 8'ha8) ^ in[50];
  assign d_o[51] = (syndrome_o == 8'hc8) ^ in[51];
  assign d_o[52] = (syndrome_o == 8'h70) ^ in[52];
  assign d_o[53] = (syndrome_o == 8'hb0) ^ in[53];
  assign d_o[54] = (syndrome_o == 8'hd0) ^ in[54];
  assign d_o[55] = (syndrome_o == 8'he0) ^ in[55];
  assign d_o[56] = (syndrome_o == 8'h1f) ^ in[56];
  assign d_o[57] = (syndrome_o == 8'h2f) ^ in[57];
  assign d_o[58] = (syndrome_o == 8'h4f) ^ in[58];
  assign d_o[59] = (syndrome_o == 8'h8f) ^ in[59];
  assign d_o[60] = (syndrome_o == 8'h37) ^ in[60];
  assign d_o[61] = (syndrome_o == 8'h57) ^ in[61];
  assign d_o[62] = (syndrome_o == 8'h97) ^ in[62];
  assign d_o[63] = (syndrome_o == 8'h67) ^ in[63];
  assign d_o[64] = (syndrome_o == 8'ha7) ^ in[64];
  assign d_o[65] = (syndrome_o == 8'hc7) ^ in[65];
  assign d_o[66] = (syndrome_o == 8'h3b) ^ in[66];
  assign d_o[67] = (syndrome_o == 8'h5b) ^ in[67];
  assign d_o[68] = (syndrome_o == 8'h9b) ^ in[68];
  assign d_o[69] = (syndrome_o == 8'h6b) ^ in[69];
  assign d_o[70] = (syndrome_o == 8'hab) ^ in[70];
  assign d_o[71] = (syndrome_o == 8'hcb) ^ in[71];
  assign d_o[72] = (syndrome_o == 8'h73) ^ in[72];
  assign d_o[73] = (syndrome_o == 8'hb3) ^ in[73];
  assign d_o[74] = (syndrome_o == 8'hd3) ^ in[74];
  assign d_o[75] = (syndrome_o == 8'he3) ^ in[75];
  assign d_o[76] = (syndrome_o == 8'h3d) ^ in[76];
  assign d_o[77] = (syndrome_o == 8'h5d) ^ in[77];
  assign d_o[78] = (syndrome_o == 8'h9d) ^ in[78];
  assign d_o[79] = (syndrome_o == 8'h6d) ^ in[79];
  assign d_o[80] = (syndrome_o == 8'had) ^ in[80];
  assign d_o[81] = (syndrome_o == 8'hcd) ^ in[81];
  assign d_o[82] = (syndrome_o == 8'h75) ^ in[82];
  assign d_o[83] = (syndrome_o == 8'hb5) ^ in[83];
  assign d_o[84] = (syndrome_o == 8'hd5) ^ in[84];
  assign d_o[85] = (syndrome_o == 8'he5) ^ in[85];
  assign d_o[86] = (syndrome_o == 8'h79) ^ in[86];
  assign d_o[87] = (syndrome_o == 8'hb9) ^ in[87];
  assign d_o[88] = (syndrome_o == 8'hd9) ^ in[88];
  assign d_o[89] = (syndrome_o == 8'he9) ^ in[89];
  assign d_o[90] = (syndrome_o == 8'hf1) ^ in[90];
  assign d_o[91] = (syndrome_o == 8'h3e) ^ in[91];
  assign d_o[92] = (syndrome_o == 8'h5e) ^ in[92];
  assign d_o[93] = (syndrome_o == 8'h9e) ^ in[93];
  assign d_o[94] = (syndrome_o == 8'h6e) ^ in[94];
  assign d_o[95] = (syndrome_o == 8'hae) ^ in[95];
  assign d_o[96] = (syndrome_o == 8'hce) ^ in[96];
  assign d_o[97] = (syndrome_o == 8'h76) ^ in[97];
  assign d_o[98] = (syndrome_o == 8'hb6) ^ in[98];
  assign d_o[99] = (syndrome_o == 8'hd6) ^ in[99];
  assign d_o[100] = (syndrome_o == 8'he6) ^ in[100];
  assign d_o[101] = (syndrome_o == 8'h7a) ^ in[101];
  assign d_o[102] = (syndrome_o == 8'hba) ^ in[102];
  assign d_o[103] = (syndrome_o == 8'hda) ^ in[103];
  assign d_o[104] = (syndrome_o == 8'hea) ^ in[104];
  assign d_o[105] = (syndrome_o == 8'hf2) ^ in[105];
  assign d_o[106] = (syndrome_o == 8'h7c) ^ in[106];
  assign d_o[107] = (syndrome_o == 8'hbc) ^ in[107];
  assign d_o[108] = (syndrome_o == 8'hdc) ^ in[108];
  assign d_o[109] = (syndrome_o == 8'hec) ^ in[109];
  assign d_o[110] = (syndrome_o == 8'hf4) ^ in[110];
  assign d_o[111] = (syndrome_o == 8'hf8) ^ in[111];
  assign d_o[112] = (syndrome_o == 8'h7f) ^ in[112];
  assign d_o[113] = (syndrome_o == 8'hbf) ^ in[113];
  assign d_o[114] = (syndrome_o == 8'hdf) ^ in[114];
  assign d_o[115] = (syndrome_o == 8'hef) ^ in[115];
  assign d_o[116] = (syndrome_o == 8'hf7) ^ in[116];
  assign d_o[117] = (syndrome_o == 8'hfb) ^ in[117];
  assign d_o[118] = (syndrome_o == 8'hfd) ^ in[118];
  assign d_o[119] = (syndrome_o == 8'hfe) ^ in[119];

  // err_o calc. bit0: single error, bit1: double error
  assign single_error = ^syndrome_o;
  assign err_o[0] = single_error;
  assign err_o[1] = ~single_error & (|syndrome_o);

endmodule : prim_secded_128_120_dec
