// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// SECDED Decoder generated by
// util/design/secded_gen.py -m 5 -k 11 -s 1592631616 -c hsiao

module prim_secded_16_11_dec (
  input        [15:0] in,
  output logic [10:0] d_o,
  output logic [4:0] syndrome_o,
  output logic [1:0] err_o
);

  logic single_error;

  // Syndrome calculation
  assign syndrome_o[0] = ^(in & 16'h0C3F);
  assign syndrome_o[1] = ^(in & 16'h15C7);
  assign syndrome_o[2] = ^(in & 16'h26D9);
  assign syndrome_o[3] = ^(in & 16'h476A);
  assign syndrome_o[4] = ^(in & 16'h87B4);

  // Corrected output calculation
  assign d_o[0] = (syndrome_o == 5'h7) ^ in[0];
  assign d_o[1] = (syndrome_o == 5'hb) ^ in[1];
  assign d_o[2] = (syndrome_o == 5'h13) ^ in[2];
  assign d_o[3] = (syndrome_o == 5'hd) ^ in[3];
  assign d_o[4] = (syndrome_o == 5'h15) ^ in[4];
  assign d_o[5] = (syndrome_o == 5'h19) ^ in[5];
  assign d_o[6] = (syndrome_o == 5'he) ^ in[6];
  assign d_o[7] = (syndrome_o == 5'h16) ^ in[7];
  assign d_o[8] = (syndrome_o == 5'h1a) ^ in[8];
  assign d_o[9] = (syndrome_o == 5'h1c) ^ in[9];
  assign d_o[10] = (syndrome_o == 5'h1f) ^ in[10];

  // err_o calc. bit0: single error, bit1: double error
  assign single_error = ^syndrome_o;
  assign err_o[0] = single_error;
  assign err_o[1] = ~single_error & (|syndrome_o);

endmodule : prim_secded_16_11_dec
